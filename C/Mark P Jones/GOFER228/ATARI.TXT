-----------------------------------------------------------------

                           GOFER 2.28b

                       Atari Release 1.1.0

                      by  Laurenz Pruessner
                     (Technische Informatik)

                  Technische Universitaet Berlin

            NEW: EXECUTABLES NOW RUN ON 68000s AS WELL!

This is an experimental version of GOFER for the Atari. It should
work under TOS, MiNT and MultiTOS as it is. If your system is low
 on memory you should read the manual carefully and launch GOFER
 as a TTP using a commandline to limit its memory consumption or
 alternatively use the environment variable GOFERARGS. Please do
   not forget to install environment variables for your editor
 (EDITOR, EDITLINE, TERM, TERMCAP) and the GOFER system (GOFER,
 GOFERARGS, GOFERLIB) and keep in mind that file-names and paths
can be case-sensitive, depending on the file system and UNIXMODE
                     variable you're using.

   Be careful: using the GOFER->C-compiler on a standard-TOS-
  partition might damage your files! GOFER might try to replace
  a file called STANDARD.PRE by STANDARD.PRE.C which is pretty
   much the same if you're not using an extended file system!

    This version does not yet include any MiNT-specific code.
Future versions will use improved libraries for the I/O-handling
 and will be able to catch system signals better, using the MiNT
                 Psignal()-call if it is available.

Due to a compiler bug in the HiSoft C Compiler, all former versions of
GOFER did not run on 68000s. I did not realize that, since I'm using a TT
for compilation, but severe bug reports showed that the HiSoft Compiler
used 68030 long-branches allthough all 680x0-mnemotics were switched off.

  This version of GOFER has been recompiled By U. Kuehn using the gcc
compiler. It is significantly slower than former versions, but therefore
                    runs stable on 68000 CPUs.

    This version has not yet been tested very carefully, so don't
       expect too much. Please feel free to report any strange
                          behaviour to

                      spoil@cs.tu-berlin.de

                        Laurenz Pruessner

-----------------------------------------------------------------

