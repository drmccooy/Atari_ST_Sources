Let 'em Fly! Changes Complete
=============================

1.01û (beta, not released)
-----
- [Enter] auf dem 10er-Block selektiert jetzt auch das Default-Objekt.
- Die Alert-Boxen wurden Åberarbeitet. Es wird jetzt von vornherein 8K fÅr
  den Hintergrund reserviert. Weiterhin hab ich mich dazu herabgelassen
  neue Icons zu malen (die anderen hatte ich aus FormDoIt! geklaut ...
  wÑre auch zu dreist gewesen).
- Der Word-Skip wurde auch verbessert. Vorher kannte Let 'em Fly! keine
  Umlaute.
- War ein Eingabefeld bis zum Ende voll, so konnte man mit der Maus den
  Cursor nicht hinter das letzte Zeichen positionieren.
- Ich habe den Fehler mit den Linienresten beim Fliegen gefunden und
  natÅrlich behoben.
- Das Verfahren zum Setzen der Underscores wurde komplett Åberarbeitet.
  Die Vorteile liegen auf der Hand: a) es wird jetzt weniger Speicher
  alloziert, b) es gibt nur noch wenige Programme, die Let 'em Fly!
  Åberlisten kînnen.
- Hatte man versucht mit LET_CONF (als Programm!!!) Let 'em Fly! komplett
  auszuschalten, so klappte das auch prima ... man durfte es dann nur
  nicht wieder einschalten ...

1.02 (first official release)
----
- Falls nun ein Programm den Maus-Cursor vor den Alert-Boxen nicht ein-
  schaltet, hat der Maus-Cursor trotzdem verloren (BÑtsch). Irgendwo hat
  man mal gelesen, daû Computer auch zÑhlen kînnen ...
- Vom AES nicht vordefinierte Objektflags/stati werden von Let 'em Fly!
  nun ignoriert. Hatte zwar vorher keine Probleme, aber sicher ist sicher,
  da es sonst mit Sicherheit bumst.
- Ich glaube zwar nicht, daû irgendein Programm 6 Dialoge ineinander
  verschachtelt, aber trotzdem fange ich solche Versuche jetzt ab.
- Neue Editierfunktion: [CTRL]+[Delete] lîscht alles rechts vom Cursor.
- Man kann jetzt explizit nach jedem letzten form_dial(FMD_FINISH, ...)
  einen Redraw senden lassen (siehe Config.-Programm).
- Aus der Konfiguration ist der Punkt 'Save Background' herausgeflogen, da
  eigentlich ÅberflÅssig. Dazugekommen ist der eben schon erwÑhnte Punkt
  'Send Redraw'.

1.03 (internal, not released)
----
- Da das AES fÅr seine Alert-Boxen ja einen eigenen Buffer anlegt, mir
  jedoch entfallen ist, daû man mit wind_get(WF_SCREEN, ...) die Adresse
  und LÑnge abfragen kann, wird in Let 'em Fly! dieser Buffer nun auch fÅr
  die Alert- Boxen benutzt. Bei TOS-Versionen < 1.04 wird als LÑnge
  konstant 8K angenommen. Resultat: Let 'em Fly! alloziert 8K weniger
  Speicher.
- UNDO zusÑtzlich fÅr 'verlassen', HELP zusÑtzlich fÅr 'hilfe'.
- erweiterte form_center() Routine. Dialoge, welche ein zweites mal auf-
  gerufen werden, erscheinen an der letzten Position. DrÅckt man beim
  Aufruf des Dialogs zusÑtzlich [ALT]+[CTRL], so wird die Box wieder
  zentriert dargestellt.
- Clipboard-UnterstÅtzung. Mit [CTRL]-[C/X/V] kann man jetzt auch in edi-
  tierbaren Feldern kopieren, ausschneiden und einfÅgen. Ausgeschnitten/
  Kopiert wird immer die komplette Zeile, beim EinfÅgen wird jedoch 'echt'
  eingefÅgt.
- Neue Icons kînnen installiert werden. Die Datei muû LET_ICON.RSC heiûen
  und entweder im AUTO-Ordner oder im ROOT liegen. Der Aufbau ist selbster-
  klÑrend.
- Beim durchsichtig machen eines Dialogs wird jetzt kein Redraw mehr
  gesendet, auch wenn 'Send Redraw' eingeschaltet ist.
- Das Scannen des Alert-Strings wurde komplett Åberarbeitet und ist jetzt,
  bis auf einige zusÑtzliche Sicherheitsabfragen, weitgehend kompatibel
  zum Original.
- Trifft die Routine fÅr die Tastenvergabe auf einen String, welcher
  ausschlieûlich aus Spaces besteht, hat es vorher geknallt. Ist nun auch
  behoben.
- Insgesamt wurde Let 'em Fly! von Library-Funktionen entrÅmpelt. Dadurch
  ist die neue Version auch nur ~1K lÑnger geworden.

1.10 (internal, not realeased)
----
- Neues Configurations-Accessory, welches der CPX-Version angepaût wurde.
  (Ich bin halt ein fauler Mensch ... jetzt muû ich nur noch ein Programm
  pflegen)
- önterstÅtzt jetzt virtuelle Bildschirme a la BigScreen 2.0, d.h. der
  Dialog kann an der zur Zeit sichtbaren Stelle zentriert werden. Alert-
  Boxen werden immer im sichbaren Bereich zentriert.
- öber den erweiterten Objekttyp und die nicht genutzten ob_flags ist es
  nun mîglich Let 'em Fly! Åber den jeweiligen Objektbaum zu steuern. Z.B.
  ist es so mîglich gezielt Tasten zu vergeben oder bestimmte Funktionen
  abzuschalten.
- öber den Cookie wird nun eine neue Funktion (obj_clsize) zum Berechnen
  der echten Ausmaûe eines Objekts bereitgestellt.

1.11 (second official release)
----
- Der 'Send Redraw' wurde auf alle form_dial(FMD_FINISH, ...) erweitert,
  da es oft nicht gereicht hat nur den letzten FMD_FINISH zu berÅck-
  sichtigen.
- Bei dem unten aufgefÅhrten GEMDOS Bug hat sich Let 'em Fly! etwas
  seltsam verhalten, was mit dieser Version jetzt aber (hoffentlich)
  behoben ist.
- Wird ein Ersatzobjekt mit Underscore angeklickt, so wird der Klick auf
  das eigentliche Objekt simuliert. Ausnahme: Das Ersatzobjekt ist editier-
  bar.
- War der Alert-String lÑnger als 255 Zeichen war die Wahrscheinlichkeit,
  daû Let 'em Fly! abstÅrzt sehr hoch.
- Der Code wurde hinsichtlich der Grîûe um ein paar hundert Bytes kleiner.

1.12 (third official)
----
- Um innerhalb von form_do() eigene TastendrÅcke verwalten zu kînnen, ist
  es nun mîglich Åber den Cookie-Jar eine User-Funktion zu installieren,
  welche bei jedem Tastenevent aufgerufen wird.
- Als SPECIAL Keys gelten jetzt auch die Funktionstasten [F1]-[F10]. Diese
  lassen sich aber nur Åber die ExObTypes vergeben. Die eingebauten Alert-
  Boxen machen hiervon Gebrauch, d.h. die drei Tasten kann man jetzt
  zusÑtzlich mit [F1]-[F3] erreichen.
- Das VDI-Workstation Handling wurde komplett Åberarbeitet, somit gibt es
  jetzt auch keine Probleme beim Auflîsungswechsel mehr.
- Ebenso wurde das Clipboard-Handling Åberarbeitet. Das Clipboard wird
  beim Ausschneiden von Texten vorher gelîscht, auûer man benutzt die neue
  Funktion zum AnhÑngen von Daten, welche bei zusÑtzlich gedrÅckter Shift-
  taste ausgelîst wird. Weiterhin kommt Let 'em Fly! nun auch mit sog.
  falschen Pfadangaben zurecht, d.h. ein Backslash ('\') am Ende der
  Pfadangabe fÅr das Clipboard wird korrekt behandelt.
- Bei der direkten Cursorpositionierung wurde die Ausrichtung des Textes
  nicht berÅcksichtigt. Seltsame Positionierungen sollten nun der Ver-
  gangenheit angehîren.
- Wurde Åber die ExObTypes ein UNDO oder HELP Objekt festgelegt, so wurde
  das Objekt mit zwei Tasten (und auch zwei Strichen) belegt. Ist jetzt
  behoben.
- Ist bei einem Objekt die '9' unterstrichen, so kann man dieses nun auch
  Åber [ALT]+'9' anwÑhlen (kînnte vielleicht mal ganz nÅtzlich sein).
- Ein peinlicher Fehler bezÅgl. der Speicherverwaltung in der Icon-Lade-
  routine wurde beseitigt.
- Ein kleiner (aber durchaus Åbler) Tippfehler in der form_dial() Routine
  wurde behoben. Bei der Verschachtelung von Dialogen konnte es Probleme
  geben.
- In der form_keybd()-Routine wurde ein Work-Around fÅr die MyDials
  (Interface) eingebaut. Vorher gab es Probleme beim DrÅcken von RETURN,
  d.h. das richtige Objekt wurde selektiert, jedoch ein falsches wurde
  zurÅckgegeben.
- Wurden zwei Dialoge mit der gleichen Adresse nacheinander abgearbeitet,
  obwohl diese unterschiedlich waren (z.B. Dialog-Test in Interface), dann
  hat Let 'em Fly! zwei Bomben geworfen. Ist nun auch behoben.
- Das Selektieren des DEFAULT-Objekts beim DrÅcken von RETURN wurde korri-
  giert. Es wird nun nicht mehr brute-force auf SELECTED-only gesetzt
  (peinlich).

1.13 (never release '13'er versions ...)
----
- Den Underscores und dem Alert-Icon kann nun eine bestimmte Farbe zu-
  gewiesen werden. Bei der Farbzuweisung der Underscores wird nach den
  Regeln des AES verfahren, d.h. ist ein Objekt SELECTED wird Bit 0
  komplementiert.
- Durch diese FarbunterstÅtzung muûte natÅrlich auch ein neues Konfigu-
  rationsprogramm her.
- Mit [ALT]+[Tab] bzw. [ALT]+[SHIFT]+[Tab] kann man nun das DEFAULT
  Objekt innerhalb eines Dialogs 'verschieben'. SÑmtliche selektierbaren
  G_BUTTONs werden dabei durchgegangen.
- Ohne [ALT] kann man jetzt auch die Shortcuts innerhalb der Alert-Boxen
  erreichen.
- Man kann nun die rechte Maustaste fÅr den Flugmodus (normal/ durch-
  sichtig) umkonfigurieren, d.h. rechte Taste nicht gedrÅckt: durch-
  sichtig; Taste gedrÅckt: normal.
- Let 'em Fly! versucht jetzt immer erst TT-Ram zu allozieren. Dadurch
  wird es natÅrlich noch etwas schneller.
- Die Flugroutinen wurden weiter optimiert. Boxen die grîûer als der
  Bildschirm sind, kînnen jetzt auch fliegen. Weiterhin brauchen die Werte
  zum Saven des Bildschirms bei FMD_START nicht mehr genau sein. Wird
  zuviel gesaved, so paût Let 'em Fly! die Koordinaten beim Flug an. Wurde
  zuwenig gesaved, so wird der Dialog als flugunfÑhig angesehen.
- öber die ExObTypes (bzw. die nicht genutzten Flags) lassen sich nun auch
  Dialoge flugunfÑhig machen. Das ist interessant, wenn das Programm mit
  den fliegenden Dialogen nicht zurrechtkommt.
- Ebenfalls ist nun Åber die ExObTypes ein 'Snap-in' Modus erreichbar.
  Nach dem Fliegen rastet die Dialogbox wieder auf das ursprÅngliche Byte-
  Alignment ein.
- Da man z.B. bei Dialogboxen in Fenstern (-> Kontrollfeld) eine eigene
  form_do() Routine schreiben muû, muûte man bis jetzt auch immer auf die
  Tastatur-Shortcuts von Let 'em Fly! verzichten. Nun sind zwei wichtige,
  vorher nur interne Funktionen fÅr dieses Problem Åber den Cookie an-
  sprechbar. Es handelt sich dabei um init_keys() (scannt den Dialog und
  malt die Striche) und lookup_key() (gibt bei einem Tastendruck das
  jeweilige Objekt zurÅck).
- Das wind_update() Verhalten bei den Alert-Boxen wurde verbessert, vorher
  kam es immer etwas zu spÑt.
- Die form_error() Routine zeigt jetzt nur noch Fehler kleiner #64 an. Das
  Original macht's genauso.
- Da sich bei AS-Overscan die Auflîsung ohne Reset Ñndern kann, konnte es
  bei eingeschaltetem 'Save Position' Probleme geben.
- Eine in V1.12 eingebaute InkompatibilitÑt in der form_keybd() Routine
  wurde entfernt. Das DEFAULT-Objekt muûte auch EXIT sein, daû ist beim
  Original jedoch nicht der Fall.
- Let 'em Fly! liegt jetzt eine vernÅnftige Library bei. Somit sollte es
  jetzt etwas einfacher sein die zusÑtzlichen Features von Let 'em Fly! zu
  nutzen.
- Nachdem ich in V1.11 bezÅgl. des GEMDOS Bugs von 'hoffentlich'
  gesprochen habe (was sich natÅrlich nicht erfÅllt hat), ist das Ver-
  halten ab dieser Version tatsÑchlich schîner.
- Einen Fehler in der form_keybd() Routine entfernt. Trat aber nur unter
  extremen Bedingungen auf.
- Der neuen appl_exit()-Routine fehlte seit der letzten Version etwas,
  nÑmlich ein appl_exit() (was ja eigentlich auch der Sinn sein sollte).
  Irgendwie ist diese Zeile verlorengegangen ...

1.14 (4th official)
----
- Versionsnummer vorsichtshalber auf 1.14 geÑndert ...
- Ein biûchen an der Optik gefeilt.

1.15 (beta only)
----
- In der TOS 10/91 wurden auch neue Dialogroutinen vorgestellt. NatÅrlich
  kînnen sie Let 'em Fly! nicht das Wasser reichen, aber eine Idee fand
  ich so gut, daû ich sie auch in Let 'em Fly! verwirklicht habe. Es
  handelt sich hier um die History-Funktion fÅr die editierbaren Felder.
  Mit [CTRL]+[Csr up/down] kann man die History durchgehen, mit
  [SHIFT]+[Csr up/down] kann man nach dem eben eingetippten String(anfang)
  suchen lassen (s.a. Mupfel).
- [CTRL]+[V] fÅgt jetzt nicht mehr 'echt' ein, sondern lîscht die Zeile
  vorher. Der alte Modus ist weiterhin Åber [CTRL][SHIFT]+[V] erreichbar.
- Um Zeichen zu erzeugen, die nicht so einfach Åber die Tastatur einzugeben
  sind, kann man in editierbaren Feldern (die alle Eingaben zulassen!)
  Åber [SHIFT]+[Insert] eine kleine Dialogbox mit den 'Åblen' Zeichen auf
  den Bildschirm zaubern. Diese Funktion ist auch Åber den Cookie-Jar
  erreichbar.
- Klickt man auûerhalb von Dialogboxen, so hat es vorher nur 'Pling'
  gemacht, nun kommen die Dialogboxen zur Maus geflogen (Jumpin' Dials).
- Diese neue Flugroutine ist auch Åber den Cookie erreichbar. Nebenbei gibt
  es hier eine Mîglichkeit nachzuprÅfen, ob der Dialog fliegen kann.
- Damit man in die Buttons 'reinfahren' kann, ist es nun mîglich die Zeit
  bis zum Fliegen einzustellen. Ausnahmen: ein Flugobjekt wurde definiert,
  die di_fly()-Routine wurde Åber den Cookie angesprungen.
- Neben den Strichen zum Kennzeichnen der Shortcuts, kann man jetzt den
  Buchstaben farbig drucken lassen (geht natÅrlich nur in Farbe).
- öber die ExObTypes lÑût sich nun auch ein Flugobjekt festlegen. Kann die
  Box nicht fliegen, so wird es von Let 'em Fly! gelîscht.
- Eine sog. EXAPPLBLK-Struktur wird unterstÅtzt. öber diese Struktur kann
  Let 'em Fly! benutzerdefinierte Objekte unterstÅtzen (z.B. runde Radio-
  Buttons).
- Die Tastenvergabe wurde weiter optimiert, sie geht jetzt durch vier (4)
  Instanzen: 1.) Taste Åber ExObType festgelegt? 2.) Default/Undo-Key (d.h.
  erster Buchstabe)? 3.) Wortweise vergeben (d.h. immer der erste Buchstabe
  eines Wortes). 4.) Suche ein beliebiges Zeichen (so wie frÅher auch).
- Ich glaube, der GEMDOS Bug verfolgt mich (mein Psychater kann mir leider
  auch nicht helfen). Nun denn, ab dieser Version wird der Redraw beim
  Lîschen der Box an der richtigen Stelle und in der richtigen Grîûe
  gesendet.
- In der obj_clsize()-Routine war ein kleiner Fehler enthalten: SHADOWED
  Objects mit einer positiven Rahmendicke wurden falsch berechnet. Das hat
  sich auch auf einige Dialoge ausgeweitet, da Let 'em Fly! ja nun selbst
  die Objektgrîûe berechnet.

1.16 (experimental version)
----
- In die Eingabefelder fÅr Datei- und Pfadnamen, kînnen jetzt alle legalen
  Buchstaben eingeben werden.
- Da ein String in die History nur dann eingefÅgt wird, wenn dieser auch
  verÑndert wurde, kann man jetzt mit [CTRL]+[Return] den String im
  aktuellen Eingabefeld 'manuell' einfÅgen.
- öber den Cookie-Jar kann man im eigenen Programm ebenfalls manuell
  Strings in die History einfÅgen.
- Bei CAPS-LOCK konnte die [RETURN]-Taste nicht mehr den Dialog beenden.
  Diesen Bug hatte ich in V1.15 eingebaut.
- Das Flugobjekt wird (im Gegensatz zu V1.15) nicht mehr Åber die ObFlags,
  sondern Åber den ExObType festgelegt.
- Damit bei der manuellen Tastenvergabe (die Åber den ExObType) die
  Sondertasten nicht zusÑtzlich mit einer normalen Taste belegt werden,
  kann man dies nun durch setzen eines Flags verhindern.
- Let 'em Fly! îffnet jetzt Åberhaupt keine virtuellen Workstations mehr,
  sondern speichert die Attribute der GEM-Workstation (nein, nicht die von
  dem Synthesizer ...), die verÑndert werden.

1.17 (number five is alive)
----
- öber editierbaren Feldern wechselt der normale Maus-Cursor in einen Edit-
  Cursor. Geklaut vom Mac, bzw. aus den Dialog-Boxen von Markus Fritze
  (please forgive me).
- Ein Doppelklick auf das Flugobjekt re-centered die Dialogbox wieder.
  (Diese Funktion ist auch Åber den Cookie-Jar erreichbar)
- Anstelle der rechten Maustaste, kann man nun auch eine der Shifttasten
  benutzen, um den Dialog durchsichtig zu machen.
- Ist in einem Dialog KEIN editierbares Feld vorhanden, so braucht man fÅr
  die Shortcuts kein [ALT] mehr zu drÅcken. Dieses Verfahren galt vorher
  nur fÅr die Alert-Boxen.
- Vor dem Bearbeiten der Dialogbox wird nun der Tastaturbuffer gelîscht.
  Das Original macht es anscheinend genauso.
- War ein Default-Button durch ein DISABLED `gefangen', so kann man ihn
  jetzt mit [ALT]+[Tab] auch wieder `befreien'.
- Der Gong bei den Jumpin' Dials erklingt nur, wenn die TOS-Bimmel
  eingeschaltet ist, d.h. man kann ihn auch nur so abschalten.
- Die Vergabe der Tasten nach 2 (s.o.) hatte noch einen kleinen Tenkfehler
  in der Anzeige.
- Das PrÅfen der FlugfÑhigkeit wurde verfeinert. Es gibt jetzt drei
  Returnwerte (nicht mîglich, mîglich im Sparmodus, uneingeschrÑnkt
  mîglich).
- Der ExObType 113 (0x71), der bei FormDoIt! unterstÅtzt wird um die
  KeyDials fÅr dieses Objekt auszuschalten, wird jetzt auch von
  Let 'em Fly! supported. Vorher war dieser Wert nur im ROOT-Objekt gÅltig
  (und schaltete so Let 'em Fly! komplett ab).
- Der Sparmodus beim Fliegen wurde komplett neu geschrieben und
  funktioniert jetzt auch vernÅnftig (hoffe ich zumindest ...).


Known Bugs:
-----------

- Wird die Box durchsichtig gemacht und der ist Speicher knapp, dann kann
  es sein, daû sich die Box beim nÑchsten mal nicht mehr verschieben lÑût.
  Tja, anscheinend ist das GEMDOS nicht immer in der Lage einen Block mit
  der LÑnge X zu free-en und danach wieder einen Block mit gleichem X zu
  allozieren. Auch POOLFIX schafft hier keine Abhilfe.
