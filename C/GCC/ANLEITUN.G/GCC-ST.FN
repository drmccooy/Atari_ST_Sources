\entry {o (gcc)}{11}{\code {o (gcc)}}
\entry {c (gcc)}{11}{\code {c (gcc)}}
\entry {S (gcc)}{11}{\code {S (gcc)}}
\entry {E (gcc)}{11}{\code {E (gcc)}}
\entry {v (gcc)}{12}{\code {v (gcc)}}
\entry {s (gcc)}{12}{\code {s (gcc)}}
\entry {B (gcc)}{12}{\code {B (gcc)}}
\entry {ansi (gcc)}{12}{\code {ansi (gcc)}}
\entry {traditional (gcc)}{12}{\code {traditional (gcc)}}
\entry {O (gcc)}{13}{\code {O (gcc)}}
\entry {g (gcc)}{13}{\code {g (gcc)}}
\entry {gg (gcc)}{14}{\code {gg (gcc)}}
\entry {w (gcc)}{14}{\code {w (gcc)}}
\entry {W (gcc)}{14}{\code {W (gcc)}}
\entry {Wimplicit (gcc)}{15}{\code {Wimplicit (gcc)}}
\entry {Wreturn-type (gcc)}{15}{\code {Wreturn-type (gcc)}}
\entry {Wunused (gcc)}{15}{\code {Wunused (gcc)}}
\entry {Wcomment (gcc)}{15}{\code {Wcomment (gcc)}}
\entry {Wall (gcc)}{15}{\code {Wall (gcc)}}
\entry {Wwrite-strings (gcc)}{15}{\code {Wwrite-strings (gcc)}}
\entry {p (gcc)}{15}{\code {p (gcc)}}
\entry {pg (gcc)}{16}{\code {pg (gcc)}}
\entry {l (gcc)}{16}{\code {l (gcc)}}
\entry {L (gcc)}{16}{\code {L (gcc)}}
\entry {nostdlib (gcc)}{16}{\code {nostdlib (gcc)}}
\entry {m (gcc)}{16}{\code {m (gcc)}}
\entry {m68000 (gcc)}{16}{\code {m68000 (gcc)}}
\entry {mc68000 (gcc)}{16}{\code {mc68000 (gcc)}}
\entry {m68020 (gcc)}{16}{\code {m68020 (gcc)}}
\entry {mc68020 (gcc)}{16}{\code {mc68020 (gcc)}}
\entry {m68881 (gcc)}{16}{\code {m68881 (gcc)}}
\entry {msoft-float (gcc)}{16}{\code {msoft-float (gcc)}}
\entry {mshort (gcc)}{16}{\code {mshort (gcc)}}
\entry {mnobitfield (gcc)}{17}{\code {mnobitfield (gcc)}}
\entry {mbitfield (gcc)}{17}{\code {mbitfield (gcc)}}
\entry {mrtd (gcc)}{17}{\code {mrtd (gcc)}}
\entry {ffloat-store (gcc)}{17}{\code {ffloat-store (gcc)}}
\entry {fno-asm (gcc)}{17}{\code {fno-asm (gcc)}}
\entry {fno-defer-pop (gcc)}{17}{\code {fno-defer-pop (gcc)}}
\entry {fstrength-reduce (gcc)}{17}{\code {fstrength-reduce (gcc)}}
\entry {fcombine-regs (gcc)}{18}{\code {fcombine-regs (gcc)}}
\entry {fforce-mem (gcc)}{18}{\code {fforce-mem (gcc)}}
\entry {fforce-addr (gcc)}{18}{\code {fforce-addr (gcc)}}
\entry {fomit-frame-pointer (gcc)}{18}{\code {fomit-frame-pointer (gcc)}}
\entry {finline-functions (gcc)}{18}{\code {finline-functions (gcc)}}
\entry {fkeep-inline-functions (gcc)}{18}{\code {fkeep-inline-functions (gcc)}}
\entry {fwritable-strings (gcc)}{18}{\code {fwritable-strings (gcc)}}
\entry {fcond-mismatch (gcc)}{19}{\code {fcond-mismatch (gcc)}}
\entry {fno-function-cse (gcc)}{19}{\code {fno-function-cse (gcc)}}
\entry {fvolatile (gcc)}{19}{\code {fvolatile (gcc)}}
\entry {fshared-data (gcc)}{19}{\code {fshared-data (gcc)}}
\entry {funsigned-char (gcc)}{19}{\code {funsigned-char (gcc)}}
\entry {fsigned-char (gcc)}{19}{\code {fsigned-char (gcc)}}
\entry {ffixed- (gcc)}{19}{\code {ffixed- (gcc)}}
\entry {fcall-used- (gcc)}{20}{\code {fcall-used- (gcc)}}
\entry {fcall-saved- (gcc)}{20}{\code {fcall-saved- (gcc)}}
\entry {pedantic (gcc)}{20}{\code {pedantic (gcc)}}
\entry {C (gcc)}{20}{\code {C (gcc)}}
\entry {I (gcc)}{20}{\code {I (gcc)}}
\entry {nostdinc (gcc)}{21}{\code {nostdinc (gcc)}}
\entry {M (gcc)}{21}{\code {M (gcc)}}
\entry {MM (gcc)}{21}{\code {MM (gcc)}}
\entry {D (gcc)}{21}{\code {D (gcc)}}
\entry {U (gcc)}{21}{\code {U (gcc)}}
\entry {T (gcc)}{21}{\code {T (gcc)}}
\entry {P (cpp)}{22}{\code {P (cpp)}}
\entry {C (cpp)}{22}{\code {C (cpp)}}
\entry {T (cpp)}{22}{\code {T (cpp)}}
\entry {pedantic (cpp)}{22}{\code {pedantic (cpp)}}
\entry {I (cpp)}{22}{\code {I (cpp)}}
\entry {D (cpp)}{23}{\code {D (cpp)}}
\entry {U (cpp)}{23}{\code {U (cpp)}}
\entry {undef (cpp)}{23}{\code {undef (cpp)}}
\entry {d (cpp)}{23}{\code {d (cpp)}}
\entry {M (cpp)}{23}{\code {M (cpp)}}
\entry {MM (cpp)}{23}{\code {MM (cpp)}}
\entry {i (cpp)}{23}{\code {i (cpp)}}
\entry {G (as)}{27}{\code {G (as)}}
\entry {L}{27}{\code {L}}
\entry {m68000 (as)}{27}{\code {m68000 (as)}}
\entry {m68010 (as)}{27}{\code {m68010 (as)}}
\entry {m68020 (as)}{27}{\code {m68020 (as)}}
\entry {o (as)}{27}{\code {o (as)}}
\entry {R (as)}{27}{\code {R (as)}}
\entry {v (as)}{27}{\code {v (as)}}
\entry {W (as)}{27}{\code {W (as)}}
\entry {l (ld)}{37}{\code {l (ld)}}
\entry {L (ld)}{37}{\code {L (ld)}}
\entry {M (ld)}{37}{\code {M (ld)}}
\entry {o (ld)}{37}{\code {o (ld)}}
\entry {s (ld)}{37}{\code {s (ld)}}
\entry {t (ld)}{37}{\code {t (ld)}}
\entry {x (ld)}{37}{\code {x (ld)}}
\entry {a (ar)}{38}{\code {a (ar)}}
\entry {b (ar)}{38}{\code {b (ar)}}
\entry {c (ar)}{38}{\code {c (ar)}}
\entry {d (ar)}{38}{\code {d (ar)}}
\entry {i (ar)}{38}{\code {i (ar)}}
\entry {l (ar)}{38}{\code {l (ar)}}
\entry {m (ar)}{38}{\code {m (ar)}}
\entry {o (ar)}{38}{\code {o (ar)}}
\entry {p (ar)}{38}{\code {p (ar)}}
\entry {q (ar)}{39}{\code {q (ar)}}
\entry {r (ar)}{39}{\code {r (ar)}}
\entry {s (ar)}{39}{\code {s (ar)}}
\entry {t (ar)}{39}{\code {t (ar)}}
\entry {u (ar)}{39}{\code {u (ar)}}
\entry {v (ar)}{39}{\code {v (ar)}}
\entry {x (ar)}{39}{\code {x (ar)}}
\entry {a (nm)}{40}{\code {a (nm)}}
\entry {g (nm)}{40}{\code {g (nm)}}
\entry {n (nm)}{40}{\code {n (nm)}}
\entry {o (nm)}{41}{\code {o (nm)}}
\entry {p (nm)}{41}{\code {p (nm)}}
\entry {r (nm)}{41}{\code {r (nm)}}
\entry {s (nm)}{41}{\code {s (nm)}}
\entry {u (nm)}{41}{\code {u (nm)}}
