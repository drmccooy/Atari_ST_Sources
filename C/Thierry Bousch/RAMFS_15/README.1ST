
         RAMFS.XFS: A resizable ramdisk file system for MiNT
		Version 1.4 -- September 1993

In MiNT's documentation, Eric Smith stated that it should be quite easy
to implement "nifty things such as resizable ramdisks" using loadable
file systems.  It's the simplest file system one can imagine, but I
didn't find one anywhere, so I wrote it. 

This ramdisk allocates dynamically as much memory as it needs.  As you
might expect, he won't work too well with programs which allocate all
the memory; if you want to use it as a temporary directory for the GCC,
you'll have to lower the _stksize of the executables to a reasonable
value (128 Kbyte seems to be enough).

This disk installs itself as directory U:\ram if you're using MiNT 1.08
or newer (this can be changed by modifying the RAM_NAME macro),
otherwise as drive R.  Be careful in this case because low-level bios
functions like getbpb() and rwabs() will probably yield strange results
on this drive.  The filesystem is case-insensitive (case is preserved,
but ignored), and filenames can be up to 35 characters long (this is the
RAMFILE_MAX constant).  All the rwx bits and uid/gid stuff are
supported.  Only the last-modification time of a file is recorded; the
ctime and atime fields are not implemented.  Symbolic links are allowed,
hard links aren't.  File sharing modes are implemented; file locking
isn't.  You can move a file, directory or link across directories. 

You can "delete" an open file: the file will be immediately removed from
the directory, but it will be deleted only when all the file handles
referring to it will be closed.

You can now seek() past the end of a file. It should also be possible to
do a Dgetcwd() of an arbitrary long path. Both of these changes haven't
been fully tested, so be careful.

The results of the Dfree() function shouldn't be taken too seriously,
especially the amount of free memory (because of fragmentation).

This program is postcardware. If you like it, you should send a postcard
to my postal address. On the other hand, better report bugs via
electronic mail.

  Thierry BOUSCH		Internet:  bousch@suntopo.matups.fr
  44 Boulevard du Temple		   Thierry.Bousch@linn.fidonet.org
  75011 PARIS
  FRANCE			Fidonet:   Thierry.Bousch @ 2:320/100
