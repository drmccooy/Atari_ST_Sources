ZORG, Copyright Ludovic Rousseau 1993, 1994



                             DOCTEUR



  Le menu 'Ouvre' rassemble toute les fonctions d'ouverture de disque,
fichiers, r‚pertoire, etc...

Fermer (Control F)
  Devinez !

-------------------------------------------------------------------------------

Ouvrir un Disque (Alternate D)
  Ouvre une fenˆtre sur le disque actuellement s‚lectionn‚. On change de
lecteur en cliquant  sur le lecteur d‚sir‚ ou en tapant sa lettre au clavier.
Voyez les sections 'Secteur' et 'D‚placement' pour l'utilisation de la fenˆtre
que vous venez d'ouvrir.

Ouvrir un Fichier (Alternate F)
  Ouvre un fichier s‚lectionn‚ avec le s‚lecteur de fichier. Le selecteur de
fichier s'ouvre sur le lecteur actif dans ZORG. La premiŠre fois qu'un fichier
est ouvert, le programme charge les informations sur la structure du disque (la
FAT et l'arborescence) pour pouvoir localiser le fichier sur le disque. Le
fichier n'est pas ouvert avec la fonction GEMDOS Fopen() mais les secteurs sont
lus directement … partir du disque ce qui permet d'avoir exactement les
secteurs occup‚s.
  Les fichiers sont d‚coup‚s en clusters (en g‚n‚ral un cluster fait 2
secteurs) et un fichier de 1 octet occupe en fait un cluster donc 1024 octets
si le disque a des secteurs de 512 octets (partition de moins de 16 Mo). Il
reste donc plein de place libre aprŠs la fin du fichier dans les secteurs
allou‚s et on peut voir ce qu'il y a dans ces secteurs … moiti‚ remplis
contrairement … 'DiskDoctor' qui affiche des 0 pour les octets situ‚s aprŠs le
dernier octet du fichier. Le revers de la m‚daille est que la fin du fichier
n'est pas visible. On sait qu'un octet appartient au fichier si son Offset est
inf‚rieur … la taille du fichier. Ces informations sont marqu‚es sur la
premiŠre ligne.
  En mettant un nom de fichier vide, on ouvre le r‚pertoire. Ca ne marche pas
pour la racine car ce n'est pas un fichier contrairement aux autres r‚pertoires
(voir DISK.TXT).

Ouvre un R‚pertoire (Alternate X)
  Comme pour ouvrir un fichier, vous donnez le chemin d'accŠs mais vous devez
mettre un nom de fichier vide. On tombe alors sur une boŒte de dialogue qui
affiche les 16 premiŠres entr‚es du r‚pertoire. On se d‚place avec les boutons
'Pr‚c‚dent' et 'Suivant'. Un clic sur une entr‚e et hop magie... on a tous les
champs qui s'affichent de fa‡on claire et humainement lisibles. Tous les champs
sont modifiables (c'est le but du programme). Le nom d'un fichier est compl‚t‚
par des blancs si il n'occupe pas les 13 caractŠres pr‚vus … cet effet. Voyez
le fichier DIRECTORY.TXT pour la signification et l'utilit‚ des diff‚rents
champs.


Ouvre la FAT (Alternate U)
  C'est pas encore implant‚. Perdu !

----------------------------------Raw
Access-----------------------------------


  Un des buts principaux de ZORG est de pouvoir r‚parer un disque qui … des
problŠmes de structure (aprŠs avoir utilis‚ cette chose nom‚e TURBODOS par
exemple). Le problŠme est que ZORG ne marche qu'avec une structure correcte et
un disque dur qui a boot‚ et charg‚ son driver.

Disquette (Control Y)
  Avec ce menu on peut ouvrir une disquette en se foutant totalement des
informations du boot sector. On donne le nombre de faces, de secteurs par
pistes, de pistes et le lecteur (A ou B). Le programme utilise les fonctions
Floprd() et Flopwr() pour lire et ‚crire les secteurs au lieu de Rwabs() (qui
ne marche que pour des disques 'normaux' c'est-…-dire avec un boot sector
valide). On peut lire une disquette de jeu qui n'a pas de boot sector normal et
se mettre des vies infinies trŠs facilement.
  La boŒte de dialogue propose en plus 6 boutons de configuration personelles.
Ces configurations sont d‚finies dans ZORG.INF.

Disque Dur (Control U)
  Pour un disque dur c'est un peu diff‚rent. Il n'y a pas d'appel systŠme qui
lise des secteurs directement. Rwabs ne marche que si le disque dur a boot‚ et
donc est reconnu par le systŠme. On peut avec ce menu lire et ‚crire sur un
disque mˆme si le systŠme ne sait pas qu'un disque est branch‚ (si il a ‚t‚
allum‚ aprŠs l'Atari par exemple). Cela permet de r‚parer un boot secteur
d‚fectueux (voir 'Ecrire' vu pr‚c‚demment). Il n'y a pas d'appel systŠme pour
faire ces accŠs direct et ZORG utilise ses propres routines. Ces routines
proviennent toujours et encore du livre 'Disquette et Disque Dur' de Micro
Application. Elle marchent trŠs bien avec mon disque mais je ne garantis pas un
bon fonctionnement pour tous les disques. Il faut donner le nombre de secteurs
du disque avec un maximum de 2097151 secteurs (2^21), soit un disque de
536,870,912 accŠs direct que j'avais un secteur inutilis‚ … la fin de ma
partition C. Je ne sais pas pourquoi mais j'avais une erreur quand je voulais
l'‚crire (maintenant ca va mieux merci). L'‚criture marchait quand mˆme mais
j'avais une erreur. On peut lire les secteurs aprŠs le dernier sans erreur mais
‚videmment le r‚sultat n'est pas ‚tonnant, le secteur ne change pas. On peut
mˆme les ‚crire.
  
   Sur TT :
    C'est le seul accŠs direct au DMA. Tout le reste du programme devrait
pouvoir marcher en TT RAM. En fait sur TT il existe un appel systŠme qui lit un
secteur directement (DMAread()). Les heureux possesseurs de TT (ou Falcon ?)
peuvent utiliser l'appel systŠme au lieu de mes routines. C'est pour cela qu'il
y a trois 'devices' : ACSI, SCSI et ZORG. Les deux premiers correspondent aux
p‚riph‚riques g‚r‚s par DMAread() et le dernier 'ZORG' utilise mes propres
routines.
  La boŒte de dialogue propose en plus 6 boutons de configuration personelles.
Ces configurations sont d‚finies dans ZORG.INF.

Configuration
  Ce menu affiche sous une forme humaine les Bios Parameter Blocs des
partitions n‚cessaires dans 'ZORG.INF' (BPB). Voir 'A partir de ZORG.INF' dans
le menu 'Informations'.

--------------------------------Autre File
System------------------------------


  Ce menu rassemble les fonctions d'ouverture pour les systŠmes de fichiers non
TOS. Par exemple le systŠme de fichiers Minix utilis‚ en conjonction avec MiNT
ou Multitos. Le systŠme de fichiers Minix n'a pas de FAT comme le systŠme de
fichiers TOS et les r‚pertoires n'ont pas la mˆme organisation. Ce systŠme de
fichiers est trŠs proche de l'Unix File System.

Ouvre un Fichier (Alternate W)
  Cette entr‚e correspond … 'Ouvrir un fichier' vue pr‚c‚dement mais utilise
les appels systŠme Fopen(), Fread(), Fseek(), Fwrite() et Fclose() pour se
d‚place et manipule le fichier plut“t que de lire directement les secteurs.
ZORG peut alors manipuler un fichier mˆme sans connaŒtre le systŠme de fichiers
sous-jacent. On peut apliquer les mˆme manipulations sur un tel fichier que sur
un fichier "normal". La seule diff‚rence est que ZORG ne sait pas se qui se
trouve aprŠs la fin du fichier est y met des z‚ro pour remplir les 512 octets
de la fenˆtre. Si un des octets de ce dernier 'secteur' est modifier, le
secteur est r‚ecrit en entier et le fichier voit sa taille arondie aux 512
octets sup‚rieurs.
