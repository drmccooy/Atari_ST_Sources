

6502 Emulator By Tim Titchmarsh June 1987

To run:  double click on 6502.TTP and enter the filename of the
language or utility you wish to run ie A:BASIC.BBC. Of course
the program must have been downloaded to the ST and saved as a
file of max length 16k.


The emulator will work with all of the opcodes of the older 6502s.
The newer versions (as used in the BBC master series etc) use the
unused opcodes.  These new opcodes are not covered but it should
be a simple job to insert them into the code as  spaces for them
have been left in the jump table. At present they are directed
to a return statement.  The emulator works by applying 68000
instructions that match closest to the 6502 ones. The flags are
stored in a data register that is updated by indexing the value from
a look up table.  The A,X,Y registers are implemented in data registers
and the PC,SP are implemented in the address registers. The 68000
registers have been redefined to read the 6502 equivalents.  If your
assembler does not support this assembler directive (EQUR) then you
will have to globally change them back to 68000 values using your text
editor. The page zero for the 6502 is used as the reference for all
memory addressing modes ie using address register indirect addressing
with index.
   Talking of addressing modes, the 6502 ones are implemented as macros
to save a lot of typing, if you havn't got a macro assembler why not ?.
   The assembler used for this little lot is the METACOMCO macro assembler,
therfore a few explanations may be in order:

   TEXT defines the start of a program section of codes
   BSS defines a section of uninitialised data
   DATA defines a section initialised data

   TTL sets the program title to be printed at the top each page

   CNOP is a conditional nop used to align to an even address
   your assembler may use the EVEN command.

   MACRO and ENDM are the start and end macro definition commands
   respectively with the \n character used to substitute in the nth
   arguement.

   Most of the 6502 instructions work perfectly (not all). If the
   6502 is to work in decimal mode then you may notice some side
   effects when adding or subtracting as the 6502 flags are set
   differently to the 68000 ABCD or SBCD. Hopefullt wont cause
   you to much trouble.
   The break instruction is set up to work in the same way as the BBC micro
   which reads it as a two byte instruction, the second byte being the
   error code.
   The jump and jsr intructions are also intercepted to cater for the BBC
   osbyte and osword calls.  Feel free to change them if you wish.

   Turning to the BBC (ugh!).
   I've made a stab at writing some osbyte and osword call handlers
   such as writing to the screen reading a char etc but they are by no
   means complete. The best book on the subject is the "Advanced User
   Guide" by Bray Dickens and Holmes. Have a look at the listing to
   see whats been covered; the code is documented so should be not to
   bad to follow (or is it ?).
   To return to the desktop is only possible using CONTROL C when in
   input mode else reset.
   Before I forget you need a copy of the BBC Basic rom (16k) in a file
   on your disk to run Basic the same goes for other languages although
   I make no claims for them working in any way (although I've had some
   success with a few of them). The more they conform to the correct OS calls
   the better chance they have of running.



