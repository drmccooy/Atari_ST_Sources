Autor: Kurt Walz, Freidenstr.23  7180 Crailsheim

GENTOS.TOS kann im Desktop unter "Anwendung anmelden" mit dem
Dateityp O verknÅpft werden. Dann startet es automatisch, sobald du
auf ein file mit O-Extension doppelklickst. Solche O-files sind von
einem 68000-Assembler erzeugt worden, so als ob sie von adr=0 starten.
Normale Linker entnehmen deshalb dem Schwanz des O-files, wo am file
was geÑndert werden muû, wenns nicht von adr=0 an laufen soll.

Wenn du dein Programm aber relocierbar geschrieben hast
-- also JMP nur pc-relativ  UND  Zugriff auf Programmcode ebenfalls
nur via "xx(pc)" oder LEA_xx(pc,Ri),Ai  UND  absolute RAM-Adressierung
nur auf fixe SystemAdr    (* zB. GENTOS.A ist so geschrieben *) --
dann ist es egal, von wo es startet.

GENTOS.TOS setzt dies voraus (auch die ausschlieûlich relative RAM-
 Adressierung!), dadurch wird es ganz einfach, das passende TOS-file
 zum O-file zu erzeugen. Und nix weiter macht GENTO.TOS.

VORTEIL: Viel schneller und unumstÑndlich als mit dem Linker hast du
 das LauffÑhige File zu einem kurzen Quelltext in Maschinensprache
 erzeugt.
NACHTEIL: keine Verwaltung/Umrechnung von "globalen Daten"

Eine Funktion des Linkers kann GENTOS nachahmen: das AnhÑngen von
 bereits fertigen Unterprogrammen. Allerdings muût du das bereits im
 Quelltext berÅcksichtigen. Du lÑût dein Hauptprogramm enden mit den
 Zeilen
        .EVEN
        ZUMUNTP: DC.W $DADA
        .END

 Wenn du nun innerhalb dieses Hauptprogramms einen "BSR ZUMUNTP"
 machst, so wird das anzuhÑngende Unterprogramm ausgefÅhrt; denn GENTOS.TOS
 hat statt des "$DADA" ein Unterprogramm drangehÑngt.
 Das Unterprogramm muû aber (im Gegensatz zum "echten Linken")
 auch beim stand-alone ÅbersetzungsfÑhig sein (also nix mit globalen Daten).
 Und das Unterprogramm muû einen filenamen haben wie zB. "NA1.S" bzw NA1.O
 also: es muû die Ziffer "1" vorm Punkt tragen !!
 Und das Hauptprogramm muû die Ziffer "2" vorm Punkt tragen, ansonsten
 aber genau den gleichen Namen, in unserm Beispiel also "NA2.S"
 (bzw NA2.O nach der öbersetzung).

Diese FÑhigkeit des GENTOS ist sehr hilfreich, wenn du ein Unterprogramm
 austesten willst. Du schreibst als Hauptprogramm ein kleines Test-
 programm, das du nur einmal zu Åbersetzen brauchst (und das obige
 Anforderungen einhÑlt: $DADA und Name auf "xx2.S"). Dann wuhlst du
 in deinem Unterprogramm rum, lÑût es neu Åbersetzen und doppelklickst dann
 aufs "xx2.O"  woraufhin ein xx.TOS aus den beiden zusammengebastelt wird.
 (wenn du obiges "Anwendung anmelden" mit dem Datentyp O gemacht hast)
Wenn das anzuhÑngende file gar kein echtes .O-file mit header und so ist,
 sondern nur aus binÑrDaten besteht (zB.eine CosinusTabelle), dann
 nenne es beispielsweise NA1.TO; dann weiû GENTOS, daû hier kein
 header entfernt werden muû.

Zum Rumprobieren empfehle ich die Cosinus-Sinus-Subroutines
 CSINUS3.O   CSINUS2.O   CSINUS1.TO  im Ordner  COSISINU.S   , die drei
 files sollten auf einer Diskette sein (oder auf einer RAMDISK), ohne
 das file CSINUS.TOS! aber mit dem file GENTOS.TOS, dessen O-Typ auch
 angemeldet sei! Dann brauchst du nur aufs CSINUS3.O doppelzuklicken,
 und das CSINUS.TOS wird erzeugt, indem drei files aneinandergehÑngt werden.


öbrigens kannst du das Datum setzen: Doppelklick auf
GENTOS.TOS, dann # tippen, dann Ziffern fÅr Tag, Blank, Monat, Blank, Jahr,
Return.



