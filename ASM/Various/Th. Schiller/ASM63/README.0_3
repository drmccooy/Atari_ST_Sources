README zum Crossassembler V0.3
------------------------------

   Verkauf untersagt, Kopieren und Weitergabe gestattet!
   (c) 1990 by Prof. Dr. Schiller, DBP-Telekom FH-Berlin.



Inhalt des Ordners ASM63:

      TESTASM .MIC   Assembler-Testfile (alle Opcodes)
      MINIPROZ.MIC   Monitorprogramm fÅr HD63701
      DE5V2T  .MIC   kleines Beispielprogramm
      README  .0_3   das File, das Sie gerade lesen
   ATARI\
      ASM63   .PRG   Crossassembler, lauffÑhig auf ATARI-ST
      FTOMNEW .PRG   MOTOROLA S-Record zu BinÑr-Konverter


Allgemeines:
------------

      Der Crossassembler ist in GFA-Basic 3.0 geschrieben und mit dem
   Compiler Åbersetzt. Nach dem Anklicken des Programms ASM63.PRG mel-
   det sich der Crossassembler mit der Versionsnummer. Beim Filenamen
   kann die Extension .MIC weggelassen werden. Der Crossassembler sucht
   dann automatisch das File mit dieser Extension. Ist das Eingabefile
   nicht vorhanden, so erfolgt erneut die Ausgabe: Filename?

      Beim Programmlauf wird das Ausgabefile (Extension .HX2) und ggf.
   ein Listfile (Extension .LST) erzeugt. Bei Eingabe von RETURN beim
   Filenamen wird eine Liste der Fehlercodes am Bildschirm angezeigt.
   Der Crossassembler kann jederzeit durch CTRL/C abgebrochen werden!
   WÑhrend der öbersetzung erfolgt dann eine Sicherheitsabfrage. Bei
   Abbruch mit CTRL/C werden alle geîffneten Ausgabefiles (*.LST und
   *.HX2) an der momentanen Stelle geschlossen und alte Files gelîscht!



Eigenschaften:
--------------

      Der Crossassembler ASM63 ist fÅr die öbersetzung von Assembler-
   befehlen des Mikrocontrollers HITACHI HD63701 ausgelegt. Er kann
   darÅberhinaus auch fÅr die 6800-Serie von MOTROROLA (auûer 6809)
   verwendet werden.

      Alle Befehle und Symbole kînnen mit groûen oder kleinen Buch-
   staben geschieben werden. Es wird keine Unterscheidung zwischen
   Groû- und Kleinschreibung gemacht.

      Mit Symbolen kînnen alle Grundrechenarten durchgefÅhrt werden.
   Alle Operationen sind gleichberechtigt! (Es gilt nicht: Punktrech-
   nung vor Strichrechnung) ZusÑtzlich kînnen folgende Operatoren den
   Symbolen vorangestellt werden:

      <    nur die lower 8 Bit werden verwendet
      >    nur die higher 8 Bit werden verwendet
      '    das nachfolgende Zeichen (auûer SPACE oder
           TAB) wird als ASCII-Zeichen Åbernommen

      Bei Befehlen, die sowohl DIRECT dals auch EXTENDED mîglich sind,
   kann mit < ein DIRECT und mit > ein EXTENDED erzwungen werden. Dazu
   mÅssen diese Sonderzeichen als erste Zeichen im Operandenfeld stehen.

      Fehler werden durch Zahlen codiert. Eine öbersicht Åber die Feh-
   lercodes erhÑlt man durch Eingabe eines RETURN nach dem Start des
   Programms.

      Mit der Version 0.3 kînnen 1000 Symbole verarbeitet werden. Dies
   reicht fÅr die meisten Anwendungen vîllig aus (typisch 20K-Byte
   BinÑrcode).



Pseudobefehle:
--------------

   Alle Pseudobefehle beginnen mit einem Punkt:

   .ASCII   Eingabe von ASCII-Text zwischen 2 beliebigen Zeichen
   .ASCIZ   wie .ASCII jedoch am Ende zusÑtzlich ein Nullbyte
   .ASCIN   wie .ASCII jedoch letztes Zeichen mit gesetztem Bit 8
   .BLKB reserviert Bytes. Anzahl im Operanden
   .BLKW reserviert Wîrter. Anzahl im Operanden
   .BYTE Eingabe von Bytes. Mehrere Bytes durch Komma trennen
   .END  Letzter Befehl in einem Programm (muû vorhanden sein!)
   .FILE Umleiten des Listings in ein Listfile *.LST
   .LIST Einschalten des Listings
   .NLIST   Ausschalten des Listings
   .ORG  Angabe einer neuen Adresse
   .PAGE Beginn einer neuen Seite im Listing
   .WORD Wie .BYTE jedoch fÅr Wîrter



Ausgabeformat:
--------------

   Der Crossassembler erzeugt ein MOTOROLA-Hexfile. Das Hex-File kann
   durch das Programm FTOMNEW in ein BinÑrfile umgewandelt werden.
   Dabei werden Leerbereiche, die durch ein Versetzen des Adresszeigers
   mit .ORG entstehen, mit $FF-Bytes aufgefÅllt. Dadurch kann das
   BinÑrfile unmittelbar fÅr EPROMMer verwendet werden.



Geplante Erweiterungen:
-----------------------

   o  Erweiterung mit lokalen Symbolen
   o  Erweiterung der Rechenfunktion auf 10 Klammerebenen
   o  Macros
   o  bedingte Assemblierung
   o  Version fÅr PC


