> PROCEDURE choice_tube(type_cherche&)
  LOCAL cmp_apid&,temp%,adr_form%,x_tube%,y_tube%,w_tube%,h_tube%
  LOCAL sortie!,dial_tube!,mono_flag&,action&,t&,d5&,d7&
  LOCAL cmp_descrip&
  '
  ' Proc‚dure destin‚e … permettre … l'utilisateur de choisir
  ' L'application destinatrice. Il est tout a fiat possible
  ' de pr‚senter celles-ci d'une autre fa‡ons.
  ' Fichier CHOICE.LST
  '
  a0%=a0%+6
  temp%=a0%
  sortie!=FALSE
  dial_tube!=FALSE   ! pour le form_dial
  cmp_descrip&=0   ! pour pointer dans tableau de descripteur
  d5&=0            ! compteur d'APP_ID (par pr‚caution...)
  d7&=tube1&
  mono_flag&=0     ! par d‚faut je suis seul
  @soufflage
  ~RSRC_GADDR(0,tube&,adr_form%)
  ~FORM_CENTER(adr_form%,x_tube%,y_tube%,w_tube%,h_tube%)
  @hide_all     ! proc‚dure cachant tous les boutons
  REPEAT
    ' Le GFA permet un teste avec DPEEK et &hFFFF mais
    ' pas t&=dpeek si le r‚sultat donne &hFFFF !!!!
    ' Si nous sommes … la fin ou si nous d‚passons
    IF DPEEK(temp%)=&HFFFF OR d5&>=(DPEEK(a0%-2))
      temp%=a0%       ! remet temp% au d‚but
      d5&=0           ! et init le compteur d'APP_ID
      IF d7&<>tube1&    ! si nous avons au moins rempli
        @gere_formtub   ! le premier bouton...
      ELSE
        ' Nous sommes en fin de liste et nous ne nous sommes
        ' mˆme pas trouv‚. Alerte et bye bye...
        IF mono_flag&=0
          d0&=-1
          d1&=-1
          sortie!=TRUE
          IF jy_suis&=0     ! si th‚oriquement je suis dans la liste
            ~FORM_ALERT(1,alert_tub1$)
          ENDIF
        ENDIF
      ENDIF
      '
    ELSE
      t&=DPEEK(temp%)   ! pr‚l‚ve l'app_id
      INC d5&           ! le compte
      temp%=temp%+2     ! et avance sur le prochain
      ' Nous ne sommes pas … la fin de la liste des APP_ID
      IF t&=app_id&     ! Si l'app_id actuel est le notre
        IF mono_flag&=-1
          ' Nous avons trouv‚ notre APP_ID mais d'apr‚s mono_flag
          ' nous estimons ˆtre tout seul dans la liste !
          d0&=-1
          d1&=-1
          sortie!=TRUE
          IF type_cherche&=300
            ~FORM_ALERT(1,alerte_tub2$)         ! je suis seul (300)
          ELSE
            ~FORM_ALERT(1,alerte_tub2bis$)      ! je suis seul (500)
          ENDIF
        ELSE
          mono_flag&=-1     ! pr‚venons que nous nous sommes trouv‚
        ENDIF
      ELSE      ! l'app_id actuel n'est pas le notre
        messagebuf&(0)=type_cherche&
        messagebuf&(1)=app_id&
        messagebuf&(2)=0
        messagebuf&(3)=0
        messagebuf&(4)=0
        messagebuf&(5)=0
        messagebuf&(6)=0
        messagebuf&(7)=0
        ~APPL_WRITE(t&,16,VARPTR(messagebuf&(0)))
        ' Attendons la r‚ponse
        REPEAT
          action&=EVNT_MULTI(&X110000,0,0,0,0,0,0,0,0,0,0,0,0,0,VARPTR(messagebuf&(0)),500)
        UNTIL (action&=&X10000 AND (messagebuf&(0)=(type_cherche&+1) OR messagebuf&(0)=(type_cherche&+3)) OR action&=&X100000)
        '
        ' si c'est une message 303 (ou 503) du bon correspondant
        IF action&=&X10000 AND messagebuf&(0)=type_cherche&+3 AND messagebuf&(1)=t&
          num_descrip&=0     ! r‚ception du premier descripteur
          act_apid&=messagebuf&(1)   ! de l'actuel correspondant
          mono_flag&=-2     ! nous ne sommes pas seul
          ' Nous cherchons l'adresse du bouton … remplir, et nous
          ' le remplissons avec le descripteur du correspondant
          a4%=LPEEK(VARPTR(messagebuf&(3)))     ! adresse descripteur
          REPEAT
            OB_SPEC(adr_form%,d7&)=a4%    ! place le texte dans le bouton
            OB_FLAGS(adr_form%,d7&)=&H15  !selectable, exit et r_button
            tab_okapid&(cmp_descrip&)=act_apid&     ! note l'APP_ID
            tab_okapid&(cmp_descrip&+1)=num_descrip& ! et le descripteur
            cmp_descrip&=cmp_descrip&+2
            INC num_descrip&
            INC d7&     ! on passe au bouton suivant
            IF d7&>tube5&
              @gere_formtub
              EXIT IF sortie!=TRUE
            ENDIF
            a4%=a4%+34  ! saute 32 oct de texte + flag de fin
          UNTIL DPEEK(a4%-2)=&HFF
          '
        ENDIF
      ENDIF
    ENDIF
    '
  UNTIL sortie!=TRUE
RETURN
> PROCEDURE gere_formtub
  LOCAL ex%
  IF dial_tube!=FALSE
    ~FORM_DIAL(0,0,0,0,0,x_tube%,y_tube%,w_tube%,h_tube%)
    dial_tube!=TRUE
  ENDIF
  ~OBJC_DRAW(adr_form%,0,10,x_tube%,y_tube%,w_tube%,h_tube%)
  ex&=FORM_DO(adr_form%,0)
  ' test du r‚sultat de sortie
  OB_STATE(adr_form%,ex&)=BCLR(OB_STATE(adr_form%,ex&),0)
  SELECT ex&
  CASE annutube&
    d0&=-1
    d1&=-1
    sortie!=TRUE
    ~FORM_DIAL(3,0,0,0,0,x_tube%,y_tube%,w_tube%,h_tube%)
  CASE nexttube&
    @hide_all           ! on cache tous les boutons (par d‚faut)
    cmp_descrip&=0      ! premier emplacement du tableau ap_id et identf
    d7&=tube1&          ! premier bouton du formulaire
    sortie!=FALSE
  DEFAULT
    ' C'est un des boutons descriptifs
    ex&=ex&-tube1&    ! pour avoir 0,1,2,3...
    ex&=ex&*2         ! car les infos sont par couples
    d0&=tab_okapid&(ex&)
    d1&=tab_okapid&(ex&+1)
    ~FORM_DIAL(3,0,0,0,0,x_tube%,y_tube%,w_tube%,h_tube%)
    sortie!=TRUE
  ENDSELECT
RETURN
> PROCEDURE hide_all
  ' Par d‚faut nous cachons tous les boutons
  OB_FLAGS(adr_form%,tube1&)=BSET(OB_FLAGS(adr_form%,tube1&),7)
  OB_FLAGS(adr_form%,tube2&)=BSET(OB_FLAGS(adr_form%,tube2&),7)
  OB_FLAGS(adr_form%,tube3&)=BSET(OB_FLAGS(adr_form%,tube3&),7)
  OB_FLAGS(adr_form%,tube4&)=BSET(OB_FLAGS(adr_form%,tube4&),7)
  OB_FLAGS(adr_form%,tube5&)=BSET(OB_FLAGS(adr_form%,tube5&),7)
RETURN
