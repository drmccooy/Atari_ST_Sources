                   R    E    S    A    U    C    E
                  =================================
                    geschrieben in GFA-Basic 2.02
                       von Tilman Neumann 1990

 
 --------------- Allgemeine Informationen zum Programm ---------------------

 'RESAUCE' ist ein Utility-Paket, daû Programmierern beim Umgang mit 
 GEM-Resourcen etwas mehr Komfort bringen soll.
 Der gesamte Funktionsumfang von 'RESAUCE' steht nur den den GFA-Basic-
 Programmierern offen, da einige Funktionen Sourcecode fÅr diese Sprache  
 erzeugen.

 'RESAUCE' wurde aus folgenden GrÅnden geschrieben:

    1.) Ich wuûte noch nicht, wie man RSC-Dateien per GEM in eigene
        Programme einbindet und wollte mir dieses durch RESAUCE
        erleichtern.
    2.) Ich wollte direkter als gewîhnlich auf die Resourcen zugreifen
        kînnen, da dann Manipulationen leichter durchzufÅhren sind.
    3.) Es nervte mich, daû die Resourcen als separate Dateien 
        auf dem gleichen Pfad wie das Hauptprogramm vorliegen mÅssen 
        und beim Kopieren leicht vergessen werden kînnen.
         


 ------------------- Funktionsgruppen von 'RESAUCE' ------------------------  
 
 1.) Speicher-Monitor.
     Mit dem Speichermonitor kann man ein biûchen im RAM und ROM rumstîbern.
     Er ist jedoch ziemlich primitiv und enthÑlt keine komplexeren Befehle.
     ACHTUNG: Fehlerhafte Zugriffe werden nicht abgefangen !!
      
 2.) Datei-Monitor zur Edierung von Dateien beliebigen Formats.

 3.) Analyse und Manipulation von RSC-Dateien.
     Alle Routinen im Manipulations-MenÅ habe ich ursprÅnglich geschrieben,
     weil deren Funktionen auch von der AES-Routine 'rsrc_load' ausgefÅhrt
     werden, die ich nachgebildet habe (wird auf Wunsch beim Umwandeln der
     RSC-Datei in GFA-Basic-DATAs miterzeugt !). Mit den Analyse-Funktionen 
     konnte ich so problemlos ÅberprÅfen, ob die Routinen funktionieren.
     Da seit der Version 1.2 in den Analyse-Funktionen stets die absolute 
     und relative Adresse von Strukturen usw. angegeben werden, hat 
     zumindest die Funktion zur Adreû-Umwandlung keinen groûen Wert mehr,
     da man die VerÑnderungen in 'RESAUCE' nicht mehr erkennen kann. Ich 
     habe die Routine der Komplettheit halber aber dringelassen.
 
 4.) Optimierung von RSC-Dateien.
     Diese Funktion verkÅrzt RSC-Dateien, indem doppelte Strings und Bilder
     gelîscht werden und deren Zeiger entsprechend umgesetzt werden.
     Die Optimierung bringt im Schnitt ca. 10%, die FunktionstÅchtigkeit
     des Resultats zu 99% gewÑhrleistet.
     Man kînnte zwar durch das Lîschen identischer Strukturen noch eine 
     weitere Optimierung erreichen; dies habe ich jedoch nicht eingebaut, da
     der Mehraufwand erheblich wÑre (ca. 20 kB !) und die weitere VerkÅrzung
     nicht mehr so viel bringen wÅrde.
  
 5.) Umwandlung von RSC-Dateien in GFA-Basic.
     Die DATAs werden an eine Routine angehÑngt, die die DATAs in ein
     reserviertes SpeicherstÅck lÑdt und diese Resource dann wie die AES-
     Funktion 'rsrc_load' initialisiert.

 6.) Analyse von Definitionsdateien.
     Diese Dateien enthalten die Namen der Variablen, die man den Objekten
     und BÑumen im RCS gegeben hat.
     Man kann solche Dateien von 'RESCAUCE' auswerten und auch in GFA-Basic
     umwandeln lassen.
     öbrigens: Def.-Dateien mit der Endung '*.DEF' sind zum Kuma-Format              
     kompatibel. Man muû also nur die Extension in '*.RSD' umbenennen und
     kann die Def.-Datei dann mit 'RESAUCE' laden.


 ------------- Differenzierte Beschreibung aller Funktionen ----------------

    1. öber RESAUCE: Kurzinfos Åber dieses Programm
    2. Lade-MenÅ  
       1. RSC-Datei unverÑndert laden:
          öber diesen MenÅpunkt wird eine RSC-Datei in den Speicher 
          geladen. Der nîtige Speicher wird mit GEMDOS 'Malloc' 
          reserviert, um jeden Zugriff anderer Programme oder des GEM
          auf diese Datei zu verhindern. Die geladene Datei wird in 
          keinster Weise verÑndert. Alle folgenden Funktionen beziehen
          sich auf diese Datei, bis eine neue geladen oder RESAUCE
          beendet wird.
          ACHTUNG: Es wird nicht ÅberprÅft, ob der Benutzer wirklich 
                   eine RSC-Datei geladen hat! Das Laden anderer 
                   Dateien Åber diesen MenÅpunkt fÅhrt mit Sicherheit
                   zu schweren Fehlern, da die Strukturen der Datei
                   ÅberprÅft und sogar geÑndert werden kînnen.
                   Zum Laden von Nicht-RSC-Dateien benutzen Sie bitte
                   den MenÅpunkt 2.5!
       2. RSC-Datei mittels AES 'Rsrc_load' laden:
          Durch diesen MenÅpunkt wird eine RSC-Datei mittels der AES-
          Funktion 'Rsrc_load' geladen. Diese fÅhrt folgende TÑtig-
          keiten durch: - Speicher reservieren
                        - RSC-Datei per AES 'shel_write' suchen 
                        - RSC-Datei in reservierten Speicher laden   
                        - alle Objektkoordinaten mittels AES 
                          'rsrc_obfix' umrechnen
                        - Zeiger aller Strukturen von relativer auf
                          absolute Adressierung umrechnen
                        - Zeiger in der Liste von Zeigern auf die 
                          ObjektbÑume umrechnen
                        - einige Werte im AES-internen GLOBAL[]-Feld
                          setzen
          ACHTUNG: Der RSC-Header wird   N I E M A L S   verÑndert !!
       3. Definitionsdatei im Format von Kuma (*.RSD) laden:
          Definitionsdateien sind Dateien, in denen das RCS zu einer RSC-
          Datei die vom Programmierer angegebenen Variablennamen der BÑume/
          Objekte abspeichert.
          Mit 'RESAUCE' ist es mîglich, solche Dateien zwischen den Formaten
          von Kuma und DRI zu konvertieren. Dadurch kann man mit beiden RCS-
          Programmen an derselben RSC-Datei arbeiten.
          Zur Konvertierung muû man die Definitionsdatei nur laden und im 
          gewÅnschten Format wieder abspeichern.
          ANMERKUNG: Es gibt auch noch Definitions-Dateien mit der Extension
                     *.DEF. Diese sind vom alten DRI-RCS. Ihr Format ist
                     mit dem Kuma-Format fast identisch, so daû diese bei
                     diesen Dateien nur die Extension in *.RSD umbenannt
                     werden muû.       
                     Dies ist auch Ñuûerst sinnvoll, da sich die Extension
                     *.DEF zum Standard fÅr Modula 2-Definitionsmodule ent-
                     wickelt hat.   
       4. Definitionsdatei im DRI-Format laden:
          Siehe unter 2.3 !
       5. Beliebige Datei laden:
          Eine Datei wird in per GEMDOS 'Malloc' reservierten
          Speicher geladen. Diese Datei kann angezeigt, editiert und
          abgespeichert werden, letzteres auch als DATAs fÅr Basic.
    3. Analyse-MenÅ
       1. Speichermonitor: 
          Theoretisch kann man sich hiermit den gesamten Adreûraum des ST
          anzeigen lassen. Praktisch sind jedoch nur zugÑnglich:
                - RAM-Adreûbereich: $0      - $3FFFFF
                - ROM-Adreûbereich: $FA0000 - $FEFFFF (normalerweise !)
          Folgende Tasten sind belegt:
                - '0'-'9' und 'A'-'F': Eingabe eines HEX-Bytes an der 
                                       aktuellen Cursorposition
                - 'S': Ab Adresse ... anzeigen.
                       Sie kînnen die Adresse hexadezimal ('$' am Anfang) 
                       oder dezimal eingeben. 
                - 'M': Schreib-Modus: Es gibt zwei Schreib-Modi: Im Normal-
                       Modus kann man bestimmte Adressen, die System-
                       variablen, nur lesen und nicht beschreiben. Das 
                       Beschreiben ist nur im Supervisor-Modus erlaubt.
                - Pfeil hoch, links, rechts, runter: Cursor-Steuerung.
                - Ctrl Pfeil links, rechts: Cursor an Seitenrand.
                - Ctrl Pfeil hoch, runter: Seite zeilenweise scrollen.     
          ACHTUNG: Fehlerhafte Zugriffe werden nicht abgefangen !!
       2. Dateimonitor:
          Hiermit kînnen Sie sich Dateien anzeigen lassen und énderungen
          vornehmen. 
          Die Steuerung erfolgt wie im Speicher-Monitor.
       3. RSC-Header anzeigen: 
          Der RSC-Header wird vollstÑndig ausgewertet. Es kann jedoch
          vorkommen, daû die Daten nicht der Norm entsprechen, z.B.
          setzt Megamax Modula's RCS immer das 1. Word auf 1 !!
          Durch diesen Aufruf werden gleichzeitig einige wichtige
          Variablen initialisiert, weshalb er nach jedem Laden einer
          RSC-Datei automatisch vorkommt.
       4. Objektbaum in logischer Reihenfolge anzeigen:
          Vom ersten Objekt eines beliebigen Baums ausgehend, wird 
          dieser in seiner hierarchischen VerknÅpfung angezeigt.
          Wenn im jeweiligen Objekt vorhanden, kann auch eine 
          weitere Struktur angezeigt werden (String, TEDINFO, BITBLK,
          ICONBLK oder USERBLK).
          ErklÑrung der Objektdaten:
            - Wenn neben der Objektart ein X und eine Zahl stehen, bedeutet 
              das, daû der Objekttyp im Highbyte die angegebene Zahl als 
              Erweiterung enthÑlt.
            - Anstelle des Zeigers kann das Objekt auch eine ErlÑuterung
              des Aussehens des Objekts enthalten (OBJ+12). Hierbei gilt:
                DRi. = Dicke des Rahmens (innen)
                DRa. = Dicke des Rahmens (auûen)
                RF.  = Rahmenfarbe
                TF.  = Textfarbe
                T    = transparent
                D    = deckend
                FF.  = FÅllfarbe
                IF.  = Innenfarbe
          Der Rest erklÑrt sich von selbst.    
       5. Objekte in physikalischer Reihenfolge anzeigen:
          Die Objekte werden in der Reihenfolge angezeigt, in der sie
          im Objektfeld vorliegen. Dazu wird zu jedem Objekt die 
          logische Baum- und Objektnummer ausgerechnet.
          Auch hier kann man sich die weiteren Strukturen anzeigen 
          lassen.
       6. Objektfeld durchsuchen:
          Hiermit kann man das gesamte Objektfeld entweder nach Nullzeigern
          oder nach Objekten einer bestimmten Art durchsuchen lassen.
          Wenn man ein Objekt gefunden hat, daû das Suchkriterium erfÅllt,
          wird dieses automatisch angezeigt. Dann hat man noch die Wahl, ob
          man sich eine evtl. vorhandene zum Objekt gehîrende weitere
          Struktur anzeigen lassen mîchte oder ob das nÑchste Objekt dieses
          Typs gesucht werden soll.
       7. Freie Strings anzeigen:
          Hiermit kann man sich alle freien Strings, die die Resource ent-
          hÑlt, hintereinander anzeigen lassen.
          Bei freien Strings handelt es sich meistens um die Texte von 
          Alertboxen.
       8. Freie Images anzeigen:
          Hiermit kann man sich die BITBLK-Strukturen der freien Images 
          anzeigen lassen.      
       9. Def.-Datei anzeigen:
          Hiermit kann man sich alle Variablen anzeigen lassen. Weiterhin
          wird bei Objekten auf den Namen des Baums, zu dem das Objekt 
          gehîrt, angegeben. 
      10. GLOBAL[]-Feld anzeigen: 
          Man kann sich hiermit das GLOBAL[]-Feld anzeigen lassen.
          Dieses Feld ist eine Struktur, in der sich das AES von 
          jedem aktiven Prozeû wichtige Daten merkt (da der ST kein
          Multitasking beherrscht, gibts nur eine Struktur davon!).
    4. RSC-Manipulations-MenÅ
       1. GLOBAL[]-Feld setzen:
          Hiermit kann man die Werte in das AES-interne GLOBAL[]-Feld eintra-
          gen, die auch beim Laden einer Datei mit AES 'rsrc_load' gesetzt 
          werden: LÑnge und Adresse des reservierten Bereichs, Anfangsadresse 
          der Objektbaum-Tabelle.
       2. Objektkoordinaten umrechnen: 
          Rechnet die Koordinaten, an denen das Objekt positioniert
          werden soll, von Zeichen- in Pixelauflîsung um. 
          Bei den Åbrigen Strukturen (TEDINFO usw.) liegen die 
          Koordinaten schon in Pixel vor.
       3. Zeiger der RSC-Datei umrechnen: 
          In der unverÑnderten RSC-Datei haben alle Adressen WordlÑnge und
          beziehen sich auf den Anfang der RSC-Datei im Speicher. Mit diesem 
          MenÅpunkt werden alle Adressen auf absolute Longwerte umgerechnet.
          Umgerechnet werden alle Adressen im Objektfeld, die Adressen der
          freien Images und Strings sowie alle Adressen aus der Objketbaum-
          Tabelle.
    5. Optimierung von RSC-Dateien
          Hiermit werden RSC-Dateien durch Lîschen doppelter Strings und 
          Bilder sowie dem Umsetzen deren Zeiger verkÅrzt. Die Optimierung
          bringt im Schnitt ca. 10%, die FunktionstÅchtigkeit des Resultats
          bleibt zu 99% (oder gar 100% ?) gewÑhrleistet.
          Man kînnte zwar durch das Lîschen identischer Strukturen noch eine 
          weitere Optimierung erreichen; dies habe ich jedoch nicht 
          eingebaut, da der Mehraufwand erheblich wÑre (ca. 20 kB Code !)
          und die weitere VerkÅrzung nicht mehr so viel bringen wÅrde.
          WICHTIG: Wenn man in der Resource nur Platz reservieren mîchte, um
                   dort zum Beispiel Rechenergebnisse zur spÑteren Ausgabe
                   abzulegen, dann darf dieser Platzhalter logischerweise 
                   nicht mitoptimiert werden.
                   Aus diesem Grunde werden von RESAUCE Strings, die aus 
                   lauter Neunen bestehen, nicht mitoptimiert !! 
    6. Speicher-MenÅ 
       1. Datei speichern unter ...
          Die Datei wird in dem Format, in dem sie vorlag, wieder
          abgespeichert. énderungen werden Åbernommen.
       2-4. Datei als DATAs fÅr GFA-Basic abspeichern:
            Die ASCII-Werte der einzelnen Bytes werden als DATAs 
            gespeichert. 
            Hierbei gibt es verschiedene Stufen, wie groû die dazuge-
            hîrigen Routinen ausfallen:
            2. nur die DATAs inklusive einer Routine, die die
               DATAs in ein SpeicherstÅck lÑdt.
            3. Dazu werden die Adressen einer RSC-Datei umge-
               rechnet und das AES-Global[]-Feld ergÑnzt.
               Diese Auswahl ist nur sinnvoll, wenn die RSC-
               Datei normal geladen wurde und die Koordinaten                 
               schon umgerechnet wurden. In diesem Falle lÑuft
               die Datei problemlos in der Auflîsung, die bei 
               der Behandlung der Resource eingestellt war !!
            4. Die Routine rechnet auch noch die Koordinaten
               um, so daû die Resource in allen Auflîsungen
               lauffÑhig ist. Hierzu darf die Datei noch nicht
               mit AES-Mitteln manipuliert worden sein.
       5. Definitionsdatei im Kuma-Format speichern:
          Wenn man eine Definitionsdatei geladen hat, kann man diese hiermit
          im Kuma-Format, also mit der Endung '*.RSD', abspeichern.
          Siehe 2.3 !!
       6. Definitionsdatei im DRI-Format speichern:
          Wenn man eine Definitionsdatei geladen hat, kann man diese hiermit
          im Format des RCS V2.0 von Digital Research, also mit der Endung
          '*.RSD', abspeichern.
          Siehe 2.3 !! 
  Esc. Ende des Programms !!        
 

 --------------------------- Eine kleine Bitte -----------------------------

 Falls Sie Fehler oder Verbesserungsmîglichkeiten gefunden haben, schicken
 Sie diese bitte an die folgende (meine) Adresse:

                      Tilman Neumann
                      Zum Walde 11
                      3155 Edemissen


 Wenn Sie eine Diskette plus frankiertem RÅckumschlag mitschicken, gibt's 
 mîglichst schnell die verbesserte Version zurÅck.

 Also denne, viel Spaû bei der Benutzung.
   

