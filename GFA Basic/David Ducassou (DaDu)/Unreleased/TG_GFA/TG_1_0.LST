'
'
version$="1.0g"
ladate$="June 11th 1991"
CLS
'
'       by  DADU
'
IF XBIOS(4)=0
  ALERT 3,"|Sorry, TEXT GRAPHIST |don't work with |low resolution ",1,"Ooops",dummy%
  EDIT
ENDIF
'
'
acceuil
' END
CLS
'
xb2%=XBIOS(2)
xb3%=XBIOS(3)
'
screen_7%=MALLOC(32000)                 !       pour le dessin
screen_8%=MALLOC(32000)                 !       pour le UNDO
'
IF screen_7%=0 OR screen_8%=0
  '
  PRINT "screen_7% = ";screen_7%;"    screen_8% = ";screen_8%
  PRINT CHR$(7);"ERROR!, the Memory ALLOCation for the 2 buffer screens has failed..."
  t
  EDIT
ENDIF
'
'
motif$="X"
motif2$=" "
fonction$="POINT "
chiffres!=FALSE                         !       afficher les coordon‚es ?
pause%=30
DIM screen$(80,24)
'
sommecheck%=45
'
GOSUB protection
'
GOTO dessin
'
'       *********  DESSIN  ***********
'
dessin:
GOSUB coordonnees_souris
' 460 gosub 1440
GOSUB t_rapide
INC compteur%
IF compteur%<100
  GOTO suite_au_test_du_compteur
ENDIF
'
compteur%=0
GOSUB vide_ligne_23
IF chiffres!=TRUE
  PRINT AT(2,23);cc%;" ";lc%;" "
ENDIF
PRINT AT(15,23);fonction$
PRINT AT(25,23);" 1:";motif$;"  2:";motif2$
'
suite_au_test_du_compteur:
'
' 540 if mouse key<>1 then goto 600
'
IF MOUSEK=1
  IF fonction$="POINT "
    PRINT AT(cc%,lc%);motif$;
  ELSE IF fonction$="BOX   "
    GOSUB box
  ELSE IF fonction$="VECTOR"
    GOSUB vector
  ELSE IF fonction$="FILL  "
    GOSUB fill
  ENDIF
  '
ELSE IF MOUSEK=2
  PRINT AT(cc%,lc%);motif$;
ENDIF
IF t$<>""
  GOSUB touches_clavier
ENDIF
GOTO dessin
'
'
'        ------- FONCTION DESSIN COMPLIQUEES -----------
> PROCEDURE box
  x1%=cc%
  y1%=lc%
  GOSUB vide_ligne_23
  PRINT AT(1,23);"ENTER 2ND POINT NOW..."
  '
  PAUSE 5                    !     ‚vite ke le mec soit ‚ject‚ desuite
  REPEAT
  UNTIL MOUSEK=1
  GOSUB coordonnees_souris
  GOSUB vide_ligne_23
  FOR i1%=y1% TO lc%
    FOR i2%=x1% TO cc%
      PRINT AT(i2%,i1%);motif$
    NEXT i2%
  NEXT i1%
RETURN
> PROCEDURE vector
  '
  x1%=cc%
  y1%=lc%
  PRINT AT(x1%,y1%);motif$
  GOSUB vide_ligne_23
  PRINT AT(1,23);"ENTER 2ND POINT NOW..."
  PAUSE 5
  REPEAT
  UNTIL MOUSEK=1
  GOSUB coordonnees_souris
  GOSUB vide_ligne_23
  IF cc%=x1%
    FOR i%=y1% TO lc%
      PRINT AT(cc%,i%);motif$
    NEXT i%
  ENDIF
  IF lc%=y1%
    FOR i%=x1% TO cc%
      PRINT AT(i%,lc%);motif$
    NEXT i%
  ENDIF
  PAUSE 5
RETURN
> PROCEDURE fill
  '
  LOCAL x1%,y1%,v1%
  '
  x1%=cc%
  y1%=lc%
  '
  x$=screen$(cc%,lc%)
  x%=ASC(x$)
  '
  v1%=0
  '
fill1:
  IF lc%-v1%>0 AND screen$(cc%,lc%-v1%)=x$
    PRINT AT(cc%,lc%-v1%);motif$;
    INC v1%
    GOTO fill1
  ENDIF
  '
  v1%=1
  '
fill2:
  IF screen$(cc%,lc%+v1%)=x$ AND lc%+v1%<23
    PRINT AT(cc%,lc%+v1%);motif$;
    INC v1%
    GOTO fill2
  ENDIF
  '
  PRINT AT(x1%,y1%);motif$;
  '
RETURN
> PROCEDURE touches_clavier
  IF t$="q"
    quit_text_graphist
  ELSE IF t%=97
    ' 1100 if T=97 then screen copy 8 to physic : screen copy 8 to logic
    BMOVE screen_8%,XBIOS(2),32000
    BMOVE screen_8%,XBIOS(3),32000
  ELSE IF t%=68                                 ! F10
    GOSUB vide_ligne_23
    HIDEM
    BMOVE xb2%,screen_8%,32000
    SHOWM
    PRINT AT(1,23);"SCREEN IN MEMORY"
    PAUSE pause
    GOSUB vide_ligne_23
  ELSE IF t%=97                                 ! UNDO
    GOSUB vide_ligne_23
    BMOVE screen_8%,xb2%,32000
    PRINT AT(1,23);"SCREEN RESTORED FROM MEMORY"
    PAUSE pause
    GOSUB vide_ligne_23
  ELSE IF t%=62
    GOSUB charger
  ELSE IF t%=63
    GOSUB sauver
  ELSE IF t$="="
    motif2$=motif$
  ELSE IF t$=" "
    GOSUB motifs
  ELSE IF t%=27                                 ! ESC
    GOSUB acceuil
    ' 1170 if T$=chr$(27) then goto 220 : rem         page d'acceuil
  ELSE IF t$="B"
    fonction$="BOX   "
  ELSE IF t$="C"
    IF chiffres!=FALSE
      chiffres!=TRUE
    ELSE
      chiffres!=FALSE
      PRINT AT(2,23);"       "
    ENDIF
  ELSE IF t$="F"
    fonction$="FILL  "
  ELSE IF t$="P"
    fonction$="POINT "
  ELSE IF t$="V"
    fonctions$="VECTOR"
  ENDIF
RETURN
> PROCEDURE motifs
  ' 1260 rem ----------- MOTIFS ---------------
  ' 1270 windopen 13
  ' 20*(2-divx)+2
  ' 2
  ' 36
  ' 21
  ' 4
  ' 1280 curs off : scroll off : centre "ASCII codes" : print : print
  ' 1290 inverse on : print "   0 1 2 3 4 5 6 7 8 9 A B C D E F";
  ' 1300 for Y=0 to 15
  ' 1310  : inverse on : print hex$(Y)-"$";" "; : inverse off
  ' 1320  : for X=0 to 15
  ' 1330  :  : Z=Y*16+X : if Z<32 then print "  "; else print " ";chr$(Z);
  ' 1340  : next X
  ' 1350 next Y
  ' 1360 repeat
  ' 1370  : SOURIS=mouse key
  ' 1380 until SOURIS<>0
  ' 1390 XC=xtext(x mouse) : XL=ytext(y mouse)
  ' 1400 if SOURIS=1 then MOTIF$=chr$(scrn(XC
  ' XL))
  ' 1410 windel 13
  ' 1420 return
RETURN
' 1430 rem ------ 1 TOUCHE ----------
' 1440 XT$=inkey$ : T=scancode : T$=upper$(XT$)
' 1450 return
> PROCEDURE sauver
  ' 1460 rem -------- SAUVER -------------
  ' 1470 gosub 1020
  ' 1480 screen copy physic to 7
  ' 1490 DEST$=file select$("\*.ASC"
  ' " Save this screen.")
  ' 1500  :
  ' 1510 if DEST$="" then goto 1710
  ' 1520 if right$(DEST$
  ' 4)<>".ASC" then DEST$=DEST$+".ASC"
  ' 1530 hide
  ' 1540 locate 1
  ' 23 : X$="Saving: "+DEST$ : centre X$
  ' 1550 LIGNE$=""
  ' 1560 open out #1
  ' DEST$
  ' 1570 for I1=0 to 22
  ' 1580  : for I2=0 to 78
  ' 1590  :  : C=scrn(I2
  ' I1) : if C=255 then C=32
  ' 1600  :  : C$=chr$(C)
  ' 1610  :  : LIGNE$=LIGNE$+C$
  ' 1620  : next I2
  ' 1630  : print #1
  ' LIGNE$
  ' 1640  : LIGNE$=""
  ' 1650  : locate 2
  ' 23 : print I1
  ' 1660 next I1
  ' 1670 close #1
  ' 1680 show
  ' 1690 DEST$=""
  ' 1700 gosub 1020
  ' 1710 return
RETURN
> PROCEDURE charger
  ' 1720 rem ----------- CHARGER -----------------
  ' 1730 cls
  ' 1740 centre "Your current screen will be erased !!!"
  ' 1750 locate 1
  ' 1 : centre "Have you saved it !?"
  ' 1760 FICH$=file select$("\*.*"
  ' " Load a screen.")
  ' 1770  :
  ' 1780 if FICH$="" then goto 1930
  ' 1790 cls
  ' 1800 locate 1
  ' 23 : X$="Loading: "+FICH$ : centre X$
  ' 1810 LIGNE$=""
  ' 1820 open in #1
  ' FICH$
  ' 1830 for I1=0 to 22
  ' 1840  : input #1
  ' LIGNE$
  ' 1850  : locate 0
  ' I1 : print LIGNE$
  ' 1860  : LIGNE$=""
  ' 1870  : locate 2
  ' 23 : print I1
  ' 1880 next I1
  ' 1890 close #1
  ' 1900 screen copy physic to 7
  ' 1910 FICH$=""
  ' 1920 gosub 1020
  ' 1930 return
RETURN
'
> PROCEDURE infos_commands                !       minie-doc
  CLS
  PRINT "TEXT GRAPHIST commands.                  GOOD WORK !"
  PRINT
  PRINT
  PRINT "SPACE  change ascii code"
  PRINT "B  draw boxes"
  PRINT "C  show x curs"
  PRINT "F  fill"
  PRINT "P  draw points"
  PRINT "V  'vectors' ( verticals or horizontals lines )"
  PRINT "=  left button gets right draw"
  PRINT "F4  load a draw"
  PRINT "F5  save a draw  (ascii)"
  PRINT "F10  to save screen in memory"
  PRINT "UNDO  to put screen"
  t
RETURN
> PROCEDURE protection            !       "anti-crack"
  '
  u1$="DUCASSOU DAVID"                  !       utilisateur l‚gal
  u2$="ROUTE DE MONSEGUR"
  u3$="40700 HAGETMAU"
  '
  check$=u1$+u2$+u3$
  check%=LEN(check$)
  REM print CHECK%
  IF check%<sommecheck%-1
    END
  ENDIF
RETURN
> PROCEDURE t
  t$=UPPER$(CHR$(INP(2)))
  t%=ASC(t$)
RETURN
> PROCEDURE t_rapide
  t$=INKEY$
  t$=UPPER$(t$)
  t%=ASC(t$)
RETURN
> PROCEDURE infos_auteur
  CLS
  PRINT "THE AUTHOR:     DUCASSOU DAVID"
  PRINT "                ROUTE DE MONSEGUR"
  PRINT "                40700  HAGETMAU"
  PRINT "                 FRANCE"
  PRINT
  PRINT "This PRG was made with GFA BASIC 3.5."
  PRINT "Any comments and requests are welcome."
  PRINT
  PRINT
  PRINT " AUTHORIZED USER IS :"
  PRINT
  PRINT u1$
  PRINT u2$
  PRINT u3$
  t
RETURN
> PROCEDURE acceuil
  REPEAT
    CLS
    PRINT
    PRINT "                               TEXT GRAPHIST  v";version$
    PRINT
    PRINT "                                by DAVID DUCASSOU"
    PRINT
    PRINT "                                    ";ladate$
    PRINT
    PRINT
    PRINT "                       A  informations about the author"
    PRINT
    PRINT "                       I  command's informations"
    PRINT
    PRINT "                       Q  quit TEXT GRAPHIST"
    t
    PRINT t%
    IF t$="A"
      GOSUB infos_auteur
    ENDIF
    IF t$="I"
      GOSUB infos_commands
    ENDIF
    IF t$="Q" OR t%=17
      quit_text_graphist
    ENDIF
  UNTIL t$=" "
  '
  ' 410 if T$=" " then cls : goto 1180
  ' 420 goto 370
RETURN
> PROCEDURE quit_text_graphist
  PRINT "Cleaning..."
  ~MFREE(screen_7%)
  ~MFREE(screen_8%)
  CLS
  PRINT "fini..."
  EDIT
RETURN
> PROCEDURE q
  ~MFREE(screen_7%)
  ~MFREE(screen_8%)
  CLS
  PRINT "Fini"
  END
  '  EDIT
RETURN
> PROCEDURE coordonnees_souris            !       donne la pos. du curseur texte
  ' CC=xtext(x mouse)
  ' 1060 LC=ytext(y mouse) : if LC>22 then LC=22
  cc%=INT(MOUSEX/8)
  lc%=INT(MOUSEY/8)
  IF lc%>22
    lc%=22
  ENDIF
RETURN
> PROCEDURE vide_ligne_23
  LOCATE 1,23           !       870
  PRINT SPACE$(78)
RETURN
