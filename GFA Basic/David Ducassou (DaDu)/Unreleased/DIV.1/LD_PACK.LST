'
'       Little D Packer v0.0    24/2/90  D.DUCASSOU
'
'       tentative de faire un compacteur de datas
'       c trop chiant !.
'
f_source$="F:\try.lst"
f_dest$="F:\packed.p"
'
OPEN "I",#1,f_source$
OPEN "O",#2,f_dest$
'
f_source%=LOF(#1)
'
PRINT f_source$;"  = ";f_source%;" bytes"
PRINT
PRINT "      COMPACTAGE EN COURS..."
'
lire_encore:
c1%=INP(#1)
PRINT AT(30,10);f_source%-LOC(#1);" "
'
deb_test:
IF c1%=221      !       le Ý
  OUT #2,c1%
  OUT #2,c1%
  GOTO lire_encore
ENDIF
'
IF EOF(#1)<>TRUE
  c2%=INP(#1)
ELSE
  GOTO finir
ENDIF
'
IF c2%=c1%
  o_present%=1
  PRINT "et d'1"
encore_le_meme:
  '     n'oblions pas qu'1  bit va seulement de 0 … 254
  IF o_present>253 OR (o_present>1 AND EOF(#1)=TRUE)
    PRINT "255"
    GOTO packed
  ENDIF
  c3%=INP(#1)
  PRINT "C3%= ";c3%
  IF c3%=c2%
    ADD o_present,1
    '    INC o_present%                 !       pourquoi le INC ne marche pas ?
    PRINT "o_present= ";o_present
    GOTO encore_le_meme
  ELSE                          !       il faut + de 3 bits identiques to pack
    IF o_present%=1
      PRINT "c3% <> C2%"
      OUT #2,c1%
      OUT #2,c2%
      c1%=c3%
      GOTO deb_test
    ELSE
      '                         !       compact‚
    packed:
      PRINT "un bit est pr‚sent ";o_present;" fois"
      OUT #2,221
      OUT #2,o_present          !       nbr de fois que tu devras r‚p‚ter :
      OUT #2,c2%                !       ce bit, lors du d‚packing.
      '
    ENDIF
  ENDIF
ENDIF
'
'
'
'
IF INKEY$=CHR$(27)
  PRINT " Compactage abandonn‚ !"
  GOTO finir
ENDIF
'
IF EOF(#1)<>TRUE
  GOTO lire_encore
ENDIF
'
finir:
'
VTAB 20
PRINT "Fichier pack‚ ( ";f_dest$;" ) =  ";LOF(#2);" bytes"
'
'
CLOSE #1
CLOSE #2
EDIT
'
