'       Killer Choice
'
old_free%=FRE(7)
DIM inf_boot$(511),boot$(511),nature_du_boot%(511)
DIM les_2_du_bout$(511)
path$="*.DAT"
'
PRINT CHR$(27);"v";             !       d‚passement de texte autoris‚
'
debut_du_prg:
nb_de_boot%=0
CLS
PRINT "              DADU's Killer Choice v1.0   19/04/1992, PhotoWare."
PRINT "                R‚alis‚ par DAvid DUcassou ( DADU-SOFTWARE )"
PRINT
PRINT "Ce prg travaille sur la banque KILLER.DAT de l'antivirus: OMIKRON KILLER v2.0 (Marque d‚pos‚e d'OMIKRON). ";
PRINT "DADU_KC est r‚alis‚ en GFA BASIC v3.50F, ce programme est un libre compl‚ment … l'O.K."+CHR$(0)
PRINT
PRINT "     KILLER CHOICE permet de retirer des boots de la banque. Ex: jeux, d‚mos, ... ";
PRINT "En effet certains boots peuvent se r‚v‚ler inutiles, vous ‚conomisez 544 octets en les retirant."+CHR$(0)
PRINT "     Faites une copie de votre KILLER.DAT avant d'essayer ce soft, car ";
PRINT "l'utilisation de ce prg se fait … vos risques et p‚rils ( bien que je ne ";
PRINT "lui connaisse pas de bugs )."
PRINT
PRINT
PRINT " Auteur  DAVID DUCASSOU"
PRINT "         ROUTE DE MONSEGUR"
PRINT "         40700 HAGETMAU"
PRINT "          FRANCE"
'
repeter_question:
PRINT
PRINT "Voulez-vous continuer ?"
PRINT "1  pour injecter un boot"
PRINT "2  pour cr‚er une banque plus courte que l'actuelle"
PRINT "9  pour quitter"
'
t
'
IF t$="Q" OR t%=17 OR t$="9"     !       CTRL Q
  EDIT
ENDIF
'
IF t$="1"
  GOTO injecter
ENDIF
'
IF t$<>"2"
  GOTO repeter_question
ENDIF
'
CLS
GOSUB entree_des_boots_dans_les_dims
'
'       *******************************************************
'               TRI des boots … garder ou pas
'
CLS
PRINT "      Choix du fichier dans lequel seront copi‚s"
PRINT "          les boots que vous estimez utiles."
'
FILESELECT path$,"",file$
'
IF file$=""
  GOTO debut_du_prg
ENDIF
'
CLS
PRINT "Vous allez maintenant choisir les boots que vous ";
PRINT "d‚sirez garder en r‚pondant OUI ( garder ) ou NON."
PRINT
PRINT
'
OPEN "O",#2,file$
'
FOR i%=1 TO nb_de_boot%
  '
refait:
  PRINT "Mettre le ";i%;"Šme :  ";inf_boot$(i%);"     ";
  t
  '
  IF t$<>"N" AND t$<>"O"
    GOTO refait
  ENDIF
  '
  '
  IF t$="O"
    PRINT "OUI"
    PRINT #2,inf_boot$(i%);
    PRINT #2,les_2_du_bout$(i%);
    PRINT #2,boot$(i%);
  ELSE
    PRINT
  ENDIF
  '
NEXT i%
CLOSE #2
PRINT
'
GOSUB joke
REPEAT
  t
UNTIL t$<>"N" AND t$<>"O"
GOTO debut_du_prg
'
'       *******************************************************
'                       INJECTER
injecter:
CLS
PRINT "Vous aller maintenant choisir le banque de boots ";
PRINT "… charger, qui contient votre boot."
PRINT
t
'
GOSUB entree_des_boots_dans_les_dims
'
injecter_pour_de_bon:
CLS
PRINT " INJECTER UN BOOT"
PRINT
PRINT
PRINT "Ins‚rer le disque cible dans le drive A"
PRINT
PRINT "Num‚ro du boot … injecter ? ( 0 pour quitter )"
INPUT "->",to_inject%
'
IF to_inject%=0 OR to_inject%>nb_de_boot%
  GOTO debut_du_prg
ENDIF
IF nature_du_boot%(to_inject%)=1
  '  ALERT 1,"D‚sol‚,|Cette version ne vous|permet d'injecter|un virus.",1,"OOOPS",dummy%
  IF dummy&=2
    GOTO debut_du_prg
  ENDIF
ENDIF
'
PRINT
PRINT "Attention !, cette op‚ration est TRES DANGEREUSE. Si vous h‚sitez, demandez … un ami plus averti."
PRINT "Voulez-vous que le boot soit ‚crit tel quel ? (pour les jeux et d‚mos, ";
PRINT "si la disquette n'a pas les memes paramŠtres que le boot (nbr secteurs, pistes, faces), ";
PRINT "elle sera rendue probablement inutilisable !)."
PRINT
PRINT "O pour l'‚crire tel quel, N pour l'adapter, ESC pour quitter."
PRINT
t
'
boot$=boot$(to_inject%)
'
PRINT
PRINT
PRINT "Ecriture en cours..."
PRINT
'
IF t$="O"
  ~XBIOS(9,L:V:boot$,L:0,W:0,W:1,W:0,W:0,W:1)!                                            by DADU
ELSE IF t$="N"
  sector_buf$=STRING$(512,0)
  '  PRINT "Reading current boot sector..."
  ~XBIOS(8,L:VARPTR(sector_buf$),L:0,W:0,W:1,W:0,W:0,W:1)
  '
  new_sect$=STRING$(512,0)
  BMOVE V:sector_buf$,V:new_sect$,28
  '
  BMOVE V:boot$,V:new_sect$,2
  BMOVE V:boot$+28,(V:new_sect$)+28,484
  '
  somme%=0
  FOR i%=0 TO 508 STEP 2
    ADD somme%,DPEEK(VARPTR(new_sect$)+i%)
    somme%=somme% AND 65535
  NEXT i%
  ck1%=&H1234-somme%
  DPOKE (VARPTR(new_sect$)+510),ck1%
  '
  ' PRINT "Writing the new boot sector..."
  ~XBIOS(9,L:VARPTR(new_sect$),L:0,W:0,W:1,W:0,W:0,W:1)
ELSE IF t%=27
  GOTO debut_du_prg
ELSE
  GOTO injecter_pour_de_bon
ENDIF
'
PRINT
PRINT "Termin‚."
'
t
GOTO injecter_pour_de_bon
'
> PROCEDURE entree_des_boots_dans_les_dims
  '  CLS
  '
  '  PRINT "      S‚lectionnez le fichier KILLER.DAT"
  FILESELECT path$,"KILLER.DAT",source_file$
  '
  IF source_file$=""
    EDIT
  ENDIF
  '
  PRINT "Les boots vont d‚filer. Rep‚rez le num‚ro de celui qui vous int‚resse."
  PRINT
  t
  PRINT "Liste des boots, pause en appuyant sur ESPACE"
  PRINT
  OPEN "I",#1,source_file$
  '
  file_length%=LOF(#1)
lit_encore:
  '
  FOR i%=1 TO 32
    l%=INP(#1)
    l$=CHR$(l%)
    lk$=lk$+l$
  NEXT i%
  '
  INC nb_de_boot%
  '
  inf_boot$(nb_de_boot%)=LEFT$(lk$,LEN(lk$)-2)
  les_2_du_bout$=RIGHT$(lk$,2)
  les_2_du_bout$(nb_de_boot%)=RIGHT$(lk$,2)
  lk$=""
  '
  PRINT nb_de_boot%;" ";inf_boot$(nb_de_boot%);
  '
  identifie%=ASC(LEFT$(les_2_du_bout$,1))
  reset%=ASC(RIGHT$(les_2_du_bout$,1))
  '
  IF identifie%=0
    PRINT "THE KILLER, ";
  ELSE IF identifie%=1
    PRINT "VIRUS, ";
  ELSE IF identifie%=2
    PRINT "ANTIVIRUS, ";
  ELSE IF identifie%=3
    PRINT "JEU, ";
  ENDIF
  '
  nature_du_boot%(nb_de_boot%)=identifie%
  '
  IF reset%=0
    PRINT "RESISTE AU RESET."
  ELSE IF reset%=85
    PRINT "NORMAL."
  ENDIF
  '
  t$=INKEY$
  IF t$=" "
    ~INP(2)
  ENDIF
  '
  '  FOR i%=1 TO 512
  '  l%=INP(#1)
  '  l$=CHR$(l%)
  '  boot$(nb_de_boot%)=boot$(nb_de_boot%)+l$
  ' NEXT i%
  '
  boot$(nb_de_boot%)=STRING$(512,0)
  BGET #1,V:boot$(nb_de_boot%),512
  '
  IF EOF(#1)<>TRUE
    GOTO lit_encore
  ENDIF
  '
  CLOSE #1
  '
  PRINT
  PRINT "   ";nb_de_boot%;" boots  ( ";file_length%;" octets )."
  '  PRINT boot$(34)
  t
RETURN
> PROCEDURE t
  t%=INP(2)
  t$=UPPER$(CHR$(t%))
RETURN
> PROCEDURE joke
  joke&=RANDOM(4)
  IF joke&=0
    PRINT "No problemo."
  ELSE IF joke&=1
    PRINT "R.A.S.   (rien … signaler)"
  ELSE IF joke&=2
    PRINT "L'op‚ration a ‚t‚ un succŠs, capitaine !."
  ELSE IF joke&=3
    PRINT "Message de kirk … la passerelle: tout s'est bien pass‚."
  ELSE IF joke&=4
    PRINT "Op‚ration r‚ussie, retour … la base."
  ENDIF
RETURN
