'       DDS_CHNG
'
'       j'ajoute des chr$(0) becoz sinon le gfa bloque...
'       ( aprŠs les longs prints ). Je sais pas pourkoi.
'
' flash_when_finish
'
GOSUB test_rez
'
' drive$="A"
drive$=FN donne_unite_de_disk_courante$
nbr_spaces&=7
compress!=TRUE
blank_line!=TRUE
two_spaces!=TRUE
flash!=TRUE
'
text_info$="* This .S was modified with:  DAvid DUcassou's Sources CHaNGer"
'
'
PRINT CHR$(27);"v";
'
debut:
CLS
'       ******** Y'a 2 nums de versions … changer *********
'
dds_chng$=SPACE$(9)+CHR$(27)+"p"+SPACE$(13)+"DAvid DUcassou's Sources CHaNGer v1.3             "+CHR$(27)+"q"+CHR$(0)
inverse_on
PRINT "                         DADU-SOFTWARE (ST dept) presents                      "+CHR$(0)
inverse_off
PRINT "             DAvid DUcassou's Sources CHaNGer v1.3  ( ShareWare )"
' PRINT dds_chng$;" ( ShareWare )"
PRINT "                        DDS_CHNG  June 5th 1991"
'
'       ******************************************
'
PRINT
PRINT "1  > ADD TABULATIONS to a .S"
PRINT " C > Compress spaces : ";
display(compress!)
PRINT " S > Change number of spaces to add  ( current = ";nbr_spaces&;" )"
PRINT
PRINT "2  > CONVERT tabulations of a .S from EASY RIDER to DEVPAC 2"
PRINT " L > Add a blank line after each RTS and RTE : ";
display(blank_line!)
PRINT " 5 > Add 2 spaces after each label : ";
display(two_spaces!)
PRINT
PRINT "9  > FLASH and SOUND when the work is finish : ";
display(flash!)
PRINT
PRINT "A > Informations about the author of DDS_CHNG"
PRINT "ALT Q or  CTRL Q   to quit"
PRINT
PRINT STRING$(79,"-")
PRINT "Tip: don't forget that you can compress spaces of a .S with TEMPUS 2."
PRINT "This prg is dedicated to  AYOROS from IMPACT."
PRINT "Hi to AXIOM from DNT ( the 1st asm coder that I saw, which code with only 1 space before asm instructions, he say it allow him to code faster ! )."+CHR$(0)
PRINT STRING$(79,"-")
PRINT " Choose a key..."
t
IF t$="C" AND nbr_spaces&=7
  IF compress!=TRUE
    compress!=FALSE
  ELSE
    compress!=TRUE
  ENDIF
ENDIF
IF t$="C" AND nbr_spaces&<>7
  PRINT CHR$(7)
  PRINT "Sorry!, I can only compress if there is 7 spaces."
  t
  GOTO debut
ENDIF
'
IF t$="S"
  CLS
  PRINT "New number of spaces to add ( current = ";nbr_spaces&;" )"
  INPUT "-> ",nbr_spaces&
  GOTO debut
ENDIF
IF t$="A" OR t%=226     ! touche HELP
  GOSUB display_help_text
ENDIF
'
IF t%=17 OR t%=3 OR t%=158
  CLS
  EDIT
ENDIF
'
IF t$="2"
  GOTO convert
ENDIF
'
IF t$="L"
  IF blank_line!=TRUE
    blank_line!=FALSE
  ELSE
    blank_line!=TRUE
  ENDIF
ENDIF
IF t$="5"
  IF two_spaces!=TRUE
    two_spaces!=FALSE
  ELSE
    two_spaces!=TRUE
  ENDIF
ENDIF
IF t$="9"
  IF flash!=TRUE
    flash!=FALSE
  ELSE
    flash!=TRUE
  ENDIF
ENDIF
'
IF t$<>"1"
  GOTO debut
ENDIF
'
'
'       ****************************************************
'
'
CLS
PRINT dds_chng$
PRINT
PRINT "ADD TABULATIONS to a .S"
PRINT
PRINT "When a sourcecode is typed with only 1 space before asm instructions"
PRINT "( it work with DEVPAC 2 (TM)),"
PRINT "this prg will replace this space by 8 spaces or 1 tabulation if"
PRINT "you choose 'compress mode ok.'"
PRINT
PRINT "Ex.:   LABEL:  MOVE.W #6,D0"
PRINT "        ADDQ.L #5,D0"
PRINT "        BSR    EXAMPLE"
PRINT "       END:"
PRINT
PRINT "Give:  LABEL:  MOVE.W #6,D0"
PRINT "               ADDQ.L #5,D0"
PRINT "               BSR EXAMPLE"
PRINT "       END:"
PRINT
PRINT
PRINT "  Press anykey to continue, or ESC to come back to the menu..."
t
IF t%=27
  GOTO debut
ENDIF
'
CLS
PRINT "      Choose ORIGINAL file"
FILESELECT drive$+":\*.S","",file_original$
IF file_original$=""
  GOTO debut
ENDIF
'
choose_dest_file:
CLS
PRINT "      Choose DESTINATION file"
FILESELECT drive$+":\*.S","",file_dest$
IF file_dest$=""
  GOTO debut
ENDIF
IF file_dest$=file_original$
  ALERT 1,"|NOT the SAME NAME |that original file ",1,"OK",dummy%
  GOTO choose_dest_file
ENDIF
'
'
'
DEFMOUSE 2                      !       zolie abeille
CLS
PRINT dds_chng$
PRINT
PRINT "      ADDing TABULATIONS to the .S"
PRINT
PRINT
PRINT file_original$;"  ->  ";file_dest$
PRINT
'
IF compress!=TRUE
  PRINT "I will replace 1 space by 1 tabulation ( compress mode )."
ELSE
  PRINT "I will replace 1 space by ";nbr_spaces&;" spaces."
ENDIF
PRINT "( Press ESC to abort the operation )"
'
PRINT
PRINT
VTAB 11
PRINT "Reading and converting..."
'
'
OPEN "I",#1,file_original$
'
'
file_original%=LOF(#1)
'
' le prg dest s'‚crit en 1 fois ( plus de ram disk ) dans une chaine !!!!
file_ram$=""
'
end_string$=CHR$(13)+CHR$(10)
'
REPEAT
  '
  ligne$=""
  c%=0
  '
  DO
    IF EOF(#1)=FALSE
      c%=INP(#1)
    ELSE
      GOTO les_close
    ENDIF
    '
    IF c%=13
      c2%=INP(#1)               !       vire le 10
      GOTO ligne_complete
    ELSE
      ligne$=ligne$+CHR$(c%)
    ENDIF
    '
    IF INKEY$=CHR$(27)
      CLOSE #1
      PRINT
      PRINT " Work is ABORTED !"
      t
      GOTO debut
    ENDIF
  LOOP
ligne_complete:
  '
  cg1$=""
  cg2$=""
  '
  cg1$=LEFT$(ligne$,1)
  cg2$=MID$(ligne$,2,1)
  '
  '
  IF cg1$=" "
    cg2%=ASC(cg2$)
    IF (cg2%>64 AND cg2%<91) OR (cg2%>96 AND cg2%<123)    ! est-ce l'alphabet?
      '
      IF compress!=TRUE
        ligne_new$=CHR$(9)+RIGHT$(ligne$,LEN(ligne$)-1)
      ELSE
        ligne_new$=SPACE$(nbr_spaces&)+ligne$
      ENDIF
      '
      file_ram$=file_ram$+ligne_new$+end_string$
      '
      PRINT AT(5,14);"Changed position =  ";LOC(#1);" / ";file_original%
      '
    ELSE
      file_ram$=file_ram$+ligne$+end_string$
    ENDIF
  ELSE
    file_ram$=file_ram$+ligne$+end_string$
  ENDIF
  '
  '
  t$=INKEY$
  IF t$=" "
    ~INP(2)
  ENDIF
  EXIT IF t$=CHR$(27)
  '
UNTIL EOF(#1)=TRUE
'
'
les_close:
'
CLOSE #1
'
PRINT AT(1,14);SPACE$(78)
'
VTAB 11
PRINT "                                                 "
VTAB 11
PRINT "Writing  ";file_dest$;" ..."
OPEN "O",#2,file_dest$
'
PRINT #2,text_info$
PRINT #2," "
PRINT #2,file_ram$+end_string$
'
file_dest%=LOF(#2)
'
CLOSE #2
'
DEFMOUSE 0
'
PRINT
PRINT STRING$(79,"-")
PRINT
PRINT "Operation finished."
PRINT file_dest$;" = ";file_dest%;" Bytes."
PRINT
PRINT "Press RETURN..."
'
IF flash!=TRUE
  GOSUB flash_when_finish
ENDIF
'
REPEAT
  t
UNTIL t%=13
'
GOTO debut
'
'       ****************************************************
'                       CONVERT EASY RIDER
convert:
'
CLS
PRINT dds_chng$
PRINT
PRINT "CONVERT tabulations of a .S from EASY RIDER 2 to DEVPAC 2"
PRINT
PRINT "The .S of a .PRG disassembled with EASY RIDER got only 6 spaces before asm instructions."+CHR$(0)
PRINT "The smallest tabulation with DEVPAC 2 is 8 spaces, it's more readable."
PRINT
PRINT "So this routine will add 2 spaces."
PRINT
PRINT "Ex.:   LABEL:MOVE.W #6,D0"
PRINT "             ADDQ.L #5,D0"
PRINT "             BSR    EXAMPLE"
PRINT "       END:"
PRINT
IF two_spaces!=TRUE
  PRINT "Give:  LABEL:  MOVE.W #6,D0"
ELSE
  PRINT "Give:  LABEL:MOVE.W #6,D0"
ENDIF
PRINT "               ADDQ.L #5,D0"
PRINT "               BSR EXAMPLE"
PRINT "       END:"
PRINT
PRINT "Attention!, this routine can't work on sources files that got a length superior to 30 Kb. So cute the file in several smalls files."+CHR$(0)
PRINT
PRINT "  Press anykey to continue, or ESC to come back to the menu..."
t
IF t%=27
  GOTO debut
ENDIF
'
CLS
PRINT "      Choose ORIGINAL file"
FILESELECT drive$+":\*.S","",file_original$
IF file_original$=""
  GOTO debut
ENDIF
'
choose_dest_file2:
CLS
PRINT "      Choose DESTINATION file"
FILESELECT drive$+":\*.S","",file_dest$
IF file_dest$=""
  GOTO debut
ENDIF
IF file_dest$=file_original$
  ALERT 1,"|NOT the SAME NAME |that original file ",1,"OK",dummy%
  GOTO choose_dest_file2
ENDIF
'
'
'
DEFMOUSE 2                      !       zolie abeille
CLS
PRINT dds_chng$
PRINT
PRINT "      ADDing spaces to the .S"
PRINT " ( converting EASY RIDER 2 source to DEVPAC 2 (8 spaces))"
PRINT
PRINT file_original$;"  ->  ";file_dest$
PRINT
'
IF compress!=TRUE
  PRINT "I will replace 6 space by 1 tabulation ( compress mode )."
ELSE
  PRINT "I will replace 6 space by 8 spaces."
ENDIF
PRINT "( Press ESC to abort the operation )"
'
PRINT
PRINT
VTAB 11
PRINT "Reading and converting..."
'
OPEN "I",#1,file_original$
'
file_original%=LOF(#1)
'
' Le prg dest s'‚crit en 1 fois ( plus de ram disk ) dans une chaine !!!!
' mais c limit‚ … 32 Ko
file_ram$=""
'
end_string$=CHR$(13)+CHR$(10)
'
PRINT AT(5,14);"Bytes left =  "
'
REPEAT
  '
  ligne$=""
  c%=0
  '
  DO
    IF EOF(#1)=FALSE
      c%=INP(#1)
    ELSE
      GOTO les_close2
    ENDIF
    '
    IF c%=13
      c2%=INP(#1)               !       vire le 10
      GOTO ligne_complete2
    ELSE
      ligne$=ligne$+CHR$(c%)
    ENDIF
    '
    IF INKEY$=CHR$(27)
      CLOSE #1
      PRINT
      PRINT " Work is ABORTED !"
      t
      GOTO debut
    ENDIF
    '
  LOOP
ligne_complete2:
  cg1$=""
  cg2$=""
  '
  cg1$=LEFT$(ligne$,6)
  cg2$=MID$(ligne$,7,1)
  '
  IF cg1$="      " AND cg2$<>" "
    '   cg2%=ASC(cg2$)
    '    IF (cg2%>64 AND cg2%<91) OR (cg2%>96 AND cg2%<123)    ! est-ce l'alphabet?
    '
    IF blank_line!=TRUE AND cg2$="R"
      test_rts_ou_rte$=MID$(ligne$,7,3)
      IF test_rts_ou_rte$="RTS" OR test_rts_ou_rte$="RTE"
        ligne$=ligne$+end_string$
      ENDIF
    ENDIF
    '
    IF compress!=TRUE
      ligne_new$=CHR$(9)+RIGHT$(ligne$,LEN(ligne$)-6)
    ELSE
      ligne_new$=SPACE$(2)+ligne$
    ENDIF
    '
    file_ram$=file_ram$+ligne_new$+end_string$
    '
    '    PRINT AT(25,14);LOC(#1);" / ";file_original%
    PRINT AT(20,14);file_original%-LEN(file_ram$);" "
    '
  ELSE
    '
    IF two_spaces!=TRUE AND RIGHT$(cg1$,1)=":"
      ligne%=LEN(ligne$)
      IF ligne%>6
        old_line$=ligne$
        ligne$=cg1$+"  "+RIGHT$(old_line$,ligne%-6)
      ENDIF
    ENDIF
    '
    file_ram$=file_ram$+ligne$+end_string$
  ENDIF
  '
  '
  t$=INKEY$
  IF t$=" "
    ~INP(2)
  ENDIF
  EXIT IF t$=CHR$(27)
  '
UNTIL EOF(#1)=TRUE
'
'
les_close2:
'
CLOSE #1
'
PRINT AT(1,14);SPACE$(78)
'
VTAB 11
PRINT "                                                 "
VTAB 11
PRINT "Writing  ";file_dest$;" ..."
OPEN "O",#2,file_dest$
'
PRINT #2,text_info$
PRINT #2," "
PRINT #2,file_ram$+end_string$
'
'
file_dest%=LOF(#2)
'
CLOSE #2
'
file_ram$=""
'
DEFMOUSE 0
'
PRINT
PRINT STRING$(79,"-")
PRINT
PRINT "Operation finished."
PRINT file_dest$;" = ";file_dest%;" Bytes."
PRINT
PRINT "Original length = ";file_original%;" Bytes.   Space saved = ";file_original%-file_dest%;" Bytes."
PRINT
PRINT "Press RETURN..."
'
IF flash!=TRUE
  GOSUB flash_when_finish
ENDIF
'
REPEAT
  t
UNTIL t%=13
'
GOTO debut
'
'
'       ****************************************************
PROCEDURE test_rez
  IF XBIOS(4)=0
    CLS
    PRINT " DDS_CHNG prefers medium or"
    PRINT "high resolution !..."
    PRINT
    PRINT "But let's continue..."
    PRINT
    PRINT "( CONTROL Q  to quit )"
    PRINT
    PRINT
    PRINT "Press anykey..."
    t
  ENDIF
RETURN
PROCEDURE t
  t%=INP(2)
  t$=UPPER$(CHR$(t%))
RETURN
PROCEDURE t2    !       un  ~inp(2)
  ~INP(2)
RETURN
PROCEDURE inverse_on
  PRINT CHR$(27)+"p";
RETURN
PROCEDURE inverse_off
  PRINT CHR$(27)+"q";
RETURN
FUNCTION donne_unite_de_disk_courante$
  '     DUCASSOU DAVID, 30/03/91
  LOCAL unite_de_disk_courante&
  unite_de_disk_courante&=GEMDOS(25)
  ADD unite_de_disk_courante&,65
  RETURN CHR$(unite_de_disk_courante&)
ENDFUNC
'
PROCEDURE display_help_text
  CLS
  PRINT dds_chng$
  PRINT
  PRINT "If you enjoy this software, don't hesitate to sent me some money !."
  PRINT "Then if you write me with a little check, don't forget to sent also :"
  PRINT "          1 diskette ( with your softs )"
  PRINT "        + 1 stamped envelop with your adress"
  PRINT "          ( stamp or Int. Reply Cupon )"
  PRINT "You will receive a double sided disk full of utilities prgs ( TEXT GRAPHIST, SAmple SHOwer, ASCII HUNTER, ICE DATA DEPACKER, Hiddens Files Hunter, ... )."+CHR$(0)
  PRINT "And maybe a release of DDS_CHNG."
  PRINT
  PRINT "I also swap or sell the latest demos, I will copy my list on the disk."
  PRINT
  PRINT "The author: DUCASSOU DAVID          Minitel (for frenchs) : 3615 RTEL,"
  PRINT "            ROUTE DE MONSEGUR                               BAL DADU"
  PRINT "            40700 HAGETMAU"
  PRINT "             FRANCE                 French phone: 58.79.43.01"
  PRINT
  PRINT "This prg was coded with GFA BASIC v3.5F."
  PRINT "DEVPAC is a HISOFT's tradename."
  PRINT
  PRINT "Press a key to come back to the menu..."
  t2
RETURN
'
PROCEDURE display(bit!)
  '     D. DUCASSOU, 5/6/91
  IF bit!=-1
    PRINT "YES"
  ELSE
    PRINT "NO"
  ENDIF
RETURN
PROCEDURE flash_when_finish
  '     D. DUCASSOU, 5/6/91
  '
  REPEAT
    VSYNC
    SETCOLOR 0,&H0
    SOUND 1,15,2,2,10
    PAUSE 10
    '
    VSYNC
    SETCOLOR 0,&H666
    SOUND 1,15,2,3,10
    PAUSE 10
  UNTIL INKEY$<>""
  SOUND 0,0,0,0,0
RETURN
