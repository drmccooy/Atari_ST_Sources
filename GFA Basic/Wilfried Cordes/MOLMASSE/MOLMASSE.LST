' * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
'  Wilfried Cordes, Kennedystraûe 20, 2900 Oldenburg, Tel.: 0441-53088
'  Accessory zur Bestimmung von Molmassen
' * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
' 1000 Bytes Speicher reichen
$m1000
'
' Anwendung beim AES anmelden
ap_id&=APPL_INIT()
programm!=ap_id&=0
' *
' * Ressourcebaumadressen holen
' *
INLINE rsc%,1838
setze_koordinaten(0,eingabe_adr%,rsc%)
rechte&=2
wert&=4
ergebnis&=6
rechne&=8
schluss&=9
prozent1&=12
setze_koordinaten(1,rechte_adr%,rsc%)
'
atomliste$=" HHeLiBe B C N O FNeNaMgAlSi P SClAr KCaScTi VCrMnFeCoNiCuZnGaGeAsSeBrKrRbSr YZrNbMoTcRuRhPdAgCdInSnSbTe IXeCsBaHfTa WReOsIrPtAuHgTlPbBiPo"
OPTION BASE 1
DIM atomgewicht(69)
DIM gewicht(12)                  !Gewicht pro Atom in der Formel
DIM atomsymbol$(12)
FOR m&=1 TO 69
  READ atomgewicht(m&)
NEXT m&
DATA 1.0079,4.00260,6.941,9.01218,10.81
DATA 12.011,14.0067,15.9994,18.99840,20.179
DATA 22.98977,24.305,26.98154,28.086
DATA 30.97376,32.06,35.453,39.948
DATA 39.098,40.08,44.9559,47.90,50.9414
DATA 51.996,54.9380,55.847,58.9332,58.70,63.546,65.38
DATA 69.72,72.59,74.9216,78.96,79.904,83.80
DATA 85.4678,87.62,88.9059,91.22,92.9064,95.94
DATA 97,101.07,102.9055,106.4,107.868,112.40
DATA 114.82,118.69,121.75,127.60,126.9045,131.30
DATA 132.9055,137.34,178.49,180.9479,183.85
DATA 186.207,190.2,192.22,195.09,196.9665,200.59
DATA 204.37,207.19,208.9806,210
'
IF NOT programm!
  ' Accessorynamen ins DeskmenÅ eintragen
  IF MENU_REGISTER(ap_id&,"  Molmasse...")=-1
    ' Kein Platz im DeskmenÅ
    DO
      ~EVNT_TIMER(-1)
    LOOP
  ENDIF
ENDIF
'
DO
  IF NOT programm!
    ~EVNT_MESAG(0) !Auf's angeklickt werden warten
  ENDIF
  IF MENU(1)=40 OR programm!    !'AC_OPEN'
    DEFMOUSE 0
    ' MenÅleiste sperren
    ~WIND_UPDATE(1)
    ' Dialogboxkoordinaten auf Bildschirm zentrieren
    ~FORM_CENTER(eingabe_adr%,x&,y&,b&,h&)
    ' Bildschirmplatz reservieren
    ~FORM_DIAL(0,0,0,0,0,x&,y&,b&,h&)
    ' Eingabezeile leeren
    BYTE{{OB_SPEC(eingabe_adr%,wert&)}}=0
    '
    ' Molmasse zu Anfang 0 Gramm
    CHAR{OB_SPEC(eingabe_adr%,ergebnis&)}="0"
    FOR m&=prozent1& TO prozent1&+12
      CHAR{OB_SPEC(eingabe_adr%,m&)}=""
    NEXT m&
    '
    REPEAT
      abbruch!=FALSE
      '
      ' Ausgangsknîpfe entfÑrben
      undo(eingabe_adr%,rechne&)
      undo(eingabe_adr%,schluss&)
      '
      ' Dialogbox zeichnen
      ~OBJC_DRAW(eingabe_adr%,0,3,x&,y&,b&,h&)
      '
      ' Dialog durchfÅhren
      r_obj%=FORM_DO(eingabe_adr%,0)
      '
      SELECT r_obj%
      CASE rechne&
        '
        ' Text aus Dialogbox holen
        text$=CHAR{{OB_SPEC(eingabe_adr%,wert&)}}
        '
        CLR summe
        atomanzahl&=1
        FOR m&=prozent1& TO prozent1&+12
          CHAR{OB_SPEC(eingabe_adr%,m&)}=""
        NEXT m&
        IF text$<>""
          FOR ort&=1 TO LEN(text$)
            ' Alle eingegebenen Zeichen ÅberprÅfen
            buchstabe$=MID$(text$,ort&,1)
            IF buchstabe$>="A" AND buchstabe$<="Z"
              '
              ' Eingelesenes Zeichen ist groûer Buchstabe
              a$=MID$(text$,ort&+1,1)
              '
              IF a$>="a" AND a$<="z"
                ' Groûer Buchstabe hat kleinen Buchstaben als Nachbarn
                ' Ist Kombination in Atomliste?
                stelle&=INSTR(atomliste$,buchstabe$+a$)
                IF stelle&>0
                  ' Kombination gefunden
                  atomsymbol$(atomanzahl&)=buchstabe$+a$
                  INC ort&
                  hole_haeufigkeit(stelle&,ort&,summe)
                ELSE
                  ' Kombination nicht gefunden, nach einzelnem Buchstaben suchen
                  atomsymbol$(atomanzahl&)=" "+buchstabe$
                  stelle&=INSTR(atomliste$," "+buchstabe$)
                  hole_haeufigkeit(stelle&,ort&,summe)
                ENDIF
              ELSE
                ' Buchstabe hat Zahl oder nichts als Nachbarn
                atomsymbol$(atomanzahl&)=" "+buchstabe$
                stelle&=INSTR(atomliste$," "+buchstabe$)
                hole_haeufigkeit(stelle&,ort&,summe)
              ENDIF
              '
            ELSE
              abbruch!=TRUE
            ENDIF
            EXIT IF abbruch!
          NEXT ort&
        ENDIF
        '
        IF NOT abbruch!
          IF atomanzahl&>1
            ' MolekÅlgewicht in Dialogbox schreiben
            CHAR{OB_SPEC(eingabe_adr%,ergebnis&)}=STR$(summe)
            FOR atom&=1 TO MIN(atomanzahl&-1,12)
              anteil=100*gewicht(atom&)/summe
              CHAR{OB_SPEC(eingabe_adr%,prozent1&+atom&-1)}=atomsymbol$(atom&)+": "+STR$(ROUND(anteil,2),5,2)+" %"
            NEXT atom&
          ENDIF
        ELSE
          ' Fehlerhafte Eingabe
          ~FORM_ALERT(1,"[3][Eingabe kann nicht|ausgewertet werden.][Weiter]")
          CHAR{OB_SPEC(eingabe_adr%,ergebnis&)}="0"
        ENDIF
        '
      CASE rechte&
        ~FORM_CENTER(rechte_adr%,xx&,yy&,bb&,hh&)
        ~OBJC_DRAW(rechte_adr%,0,3,xx&,yy&,bb&,hh&)
        ~FORM_DO(rechte_adr%,0)
      ENDSELECT
    UNTIL r_obj%=schluss&
    '
    ' Botschaft an Hauptprogramm zur Bildschirmrestaurierung schicken
    ~FORM_DIAL(3,0,0,0,0,x&,y&,b&,h&)
    ' MenÅs dÅrfen wieder klappen
    ~WIND_UPDATE(0)
  ENDIF
  EXIT IF programm!
LOOP
'
' Programmende
~RSRC_FREE()
END
'
PROCEDURE hole_haeufigkeit(stelle&,VAR ort&,summe)
  ' Element ist in Liste, nun zugehîrigen Zahlenwert bestimmen
  LOCAL menge&
  '
  IF stelle&>0 AND ODD(stelle&)
    ' Umrechnung von Position in String
    ' auf atomgewicht()-Feldindex
    DIV stelle&,2
    INC stelle&
    '
    ' ort& zeigt auf erstes Zeichen nach dem Elementsymbol
    INC ort&
    '
    ' Zahlenwert der Zeichen nach dem Elementsymbol bestimmen
    menge&=VAL(MID$(text$,ort&))
    '
    ' Wenn Zahl gefunden (menge&>0), Textzeiger neu stellen
    IF menge&>0
      ' Korrektur wegen interner Zahlendarstellung
      ADD ort&,LOG10(menge&)+0.001
    ELSE
      menge&=1
      DEC ort&  !wegen NEXT ort& in Haupschleife
    ENDIF
    '
    ' MolekÅlgewicht aufaddieren
    ADD summe,atomgewicht(stelle&)*menge&
    gewicht(atomanzahl&)=atomgewicht(stelle&)*menge&
    INC atomanzahl&
  ELSE
    abbruch!=TRUE
  ENDIF
RETURN
'
' Objekt desaktivieren
PROCEDURE disable(baum_adr%,objekt&)
  OB_STATE(baum_adr%,objekt&)=BSET(OB_STATE(baum_adr%,objekt&),3)
RETURN
' Objekt aktivieren
PROCEDURE enable(baum_adr%,objekt&)
  OB_STATE(baum_adr%,objekt&)=BCLR(OB_STATE(baum_adr%,objekt&),3)
RETURN
' Knopf entfÑrben
PROCEDURE undo(baum_adr%,objekt&)
  OB_STATE(baum_adr%,objekt&)=BCLR(OB_STATE(baum_adr%,objekt&),0)
RETURN
' *
' Koordinaten in INLINE-Ressource berechnen
' *
PROCEDURE setze_koordinaten(baum&,VAR adr%,rsc%)
  LOCAL nummer&,adresse%,tabelle&
  '
  tabelle&=CARD{rsc%+18}
  adr%={tabelle&+rsc%+baum&*4}+rsc%
  nummer&=0
  REPEAT
    ~RSRC_OBFIX(adr%,nummer&)
    SELECT OB_TYPE(adr%,nummer&)
    CASE 21,22,29,30,31
      OB_SPEC(adr%,nummer&)=OB_SPEC(adr%,nummer&)+rsc%
      adresse%=OB_SPEC(adr%,nummer&)
      {adresse%}={adresse%}+rsc%
      {adresse%+4}={adresse%+4}+rsc%
      {adresse%+8}={adresse%+8}+rsc%
    CASE 23,24     !BITBLK,USERDEF
      OB_SPEC(adr%,nummer&)=OB_SPEC(adr%,nummer&)+rsc%
      adresse%=OB_SPEC(adr%,nummer&)
      {adresse%}={adresse%}+rsc%
    CASE 26,28,32
      OB_SPEC(adr%,nummer&)=OB_SPEC(adr%,nummer&)+rsc%
    ENDSELECT
    '
    INC nummer&
  UNTIL BTST(OB_FLAGS(adr%,nummer&-1),5)
RETURN
