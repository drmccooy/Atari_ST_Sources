'
' Drachen   Farbversion                  by Dirk Woitha  (Mai 89)
'
'
DIM namen$(10),score%(10)
DIM stein$(42),zuege%(144)
DIM feld%(144),schachtel%(144),back%(144)
DIM x_koord%(144),y_koord%(144)
DIM oben%(144),unten%(144),links%(144),rechts%(144)
DIM diag_ro%(144),diag_ru%(144),diag_lo%(144),diag_lu%(144)
DIM drueber%(144),drunter%(144)
DIM abbau%(144),misch%(144),jahr%(4),mum%(4),reihe%(72)
DIM ebene%(4,96)
DIM texte$(52),st_farbe%(16)
'
'  weitere Bildschirme
'
DIM bilder%(65000/4)
'
' ###############################################################
'                          Hauptprogramm
' ###############################################################
'
IF XBIOS(4)<>0 THEN
  ALERT 3,"Diese Drachenversion lÑuft | nur in geringer Auflîsung!| |",1,"Das wars",d%
  END
ENDIF
'
@read_farbe                         ! Standardfarben merken
'
bild1_adr%=(VARPTR(bilder%(0))+255+128) AND &HFFFF00
bild2_adr%=bild1_adr%+32256
bild_adr%=XBIOS(3)
'
HIDEM
@hole_beschreibung
VOID XBIOS(5,L:-1,L:bild2_adr%,-1)
@inf_farbe
@hole_score
@hole_steine
'                                MenÅeintrÑge
i%=-1
RESTORE text_daten
REPEAT
  INC i%
  READ texte$(i%)
UNTIL texte$(i%)="ENDE"
texte$(i%)=""
'                                Arrays initialisieren
@lade_arrays
'                                Spielfeld aufbauen
DEFMOUSE 0
DEFTEXT 1,0,0,6
DEFFILL 4,1
PBOX 0,0,319,199
anzahl%=144
mogel!=FALSE
zurueck!=FALSE
wieder!=FALSE
demo!=FALSE
zeit!=TRUE
tim%=TIMER
tim_alt%=1
@init_menu
@mische
@bau_auf
VOID XBIOS(5,L:bild2_adr%,L:bild2_adr%,-1)
SHOWM
PRINT CHR$(7);
REPEAT
UNTIL MOUSEK=1 AND MOUSEX>130 AND MOUSEX<190 AND MOUSEY>184 AND MOUSEY<196
VOID XBIOS(5,L:bild_adr%,L:bild_adr%,-1)
MENU 16,1
stfa%=1
@steinfarbe
DEFMOUSE 3
tim%=TIMER
DO
  IF MOUSEY<10 THEN
    @maus_pfeil
  ENDIF
  @print_zeit
  IF NOT pfeil! THEN
    @spiele
  ENDIF
  ON MENU
LOOP
END
' ####################################################################
'  Unterprogramme die die Mausklicks auf den Spielsteinen auswerten
' ####################################################################
' ====================================================================
'                  Normaler Spielmodus  (Modus% = 1)
' ====================================================================
PROCEDURE spiele
  @suche_stein
  IF nummer%>0 THEN
    IF nummer%<>2 OR feld%(5)=0 OR feld%(1)=0 THEN
      IF feld%(links%(nummer%))=0 OR feld%(rechts%(nummer%))=0 THEN
        IF select%=0 THEN
          select%=nummer%                   ! 1. Stein invertieren
          @bau_stueck(nummer%)
        ELSE
          IF select%=nummer% THEN           ! gleicher Stein nochmal,
            select%=0                       ! also Invertierung aufheben
            @bau_stueck(nummer%)
          ELSE
            a%=feld%(select%)
            b%=feld%(nummer%)
            IF a%=b% OR (a%>=35 AND a%<=38 AND b%>=35 AND b%<=38) OR (a%>38 AND b%>38) THEN
              INC last_zug%
              zuege%(last_zug%)=select%     ! passender 2. Stein,
              INC last_zug%                 ! also beide wegnehmen
              zuege%(last_zug%)=nummer%
              feld%(nummer%)=0
              @bau_stueck(nummer%)
              feld%(select%)=0
              @bau_stueck(select%)
              select%=0
              anzahl%=anzahl%-2
              @print_anzahl
              @menue_anzeige
              IF anzahl%=0
                @das_wars
              ENDIF
            ELSE
              a%=select%                     ! unpassender 2. Stein,
              select%=0                      ! also diesen als 1. Stein markieren
              @bau_stueck(a%)
              select%=nummer%
              @bau_stueck(select%)
            ENDIF
          ENDIF
        ENDIF
      ENDIF
    ENDIF
  ENDIF
RETURN
' ===================================================================
'                   Steine wegnehmen (Modus% = 2)
' ===================================================================
PROCEDURE nimm_weg
  MOUSE mx%,my%,taste%
  IF taste%=1 THEN
    IF mx%>xkl%+3 AND mx%<xkl%+43 AND my%>ykl%+3 AND my%<ykl%+15 THEN
      @text_weg
      modus%=1
    ENDIF
    @suche_stein
    IF nummer%>0 THEN
      feld%(nummer%)=0
      INC last_zug%
      zuege%(last_zug%)=nummer%+1000
      DEC anzahl%
      @print_anzahl
      @bau_stueck(nummer%)
      @menue_anzeige
      mogel!=TRUE
      zeit!=FALSE
      @zeit_weg
      IF anzahl%=0 THEN
        @text_weg
        modus%=1
        @das_wars
      ENDIF
    ENDIF
  ENDIF
RETURN
' -------------------------------------------------------------------
'                    Alle Steine abgerÑumt
' -------------------------------------------------------------------
PROCEDURE das_wars
  @menue_anzeige
  FOR i%=1 TO 1000
    IF MOUSEK=1 THEN
      i%=1
    ENDIF
  NEXT i%
  IF mogel! AND zurueck!=FALSE AND demo!=FALSE AND wieder!=FALSE THEN
    ende$="Mit Steinewegnehmen kann  |das wohl jeder!"
    knopf$=" Na Ja "
  ENDIF
  IF mogel!=FALSE AND zurueck! AND demo!=FALSE AND wieder!=FALSE THEN
    ende$="Schon ganz gut!| |Aber das nÑchste Mal|bitte ohne ZugrÅcknahme!  "
    knopf$=" OK "
  ENDIF
  IF mogel!=FALSE AND zurueck!=FALSE AND demo! AND wieder!=FALSE THEN
    ende$="Erst die Lîsung|im Domomodus ansehen,  |und dann abrÑumen!|Das haben wir gern! "
    knopf$=" Schade "
  ENDIF
  IF mogel!=FALSE AND zurueck!=FALSE AND demo!=FALSE AND wieder! THEN
    ende$="Sehr gut!|Aber in der Spielwiederholung |kann leider keine Zeit|anerkannt werden!"
    knopf$=" weiter "
  ENDIF
  IF mogel! AND zurueck! AND demo!=FALSE AND wieder!=FALSE THEN
    ende$="Steine wegnehmen und  |ZÅge zurÅcknehmen!|So gehts ja nicht!"
    knopf$=" Jammer "
  ENDIF
  IF mogel! AND zurueck!=FALSE AND demo! AND wieder!=FALSE THEN
    ende$="Mit Demomodus und Steine-  |wegnehmen gelîst.|Wahrlich keine|Meisterleistung!"
    knopf$=" Oje "
  ENDIF
  IF mogel! AND zurueck!=FALSE AND demo!=FALSE AND wieder! THEN
    ende$="In der Spielwiederholung|auch noch Steine wegnehmen!  |Hast Du das denn nîtig?"
    knopf$="Ja doch"
  ENDIF
  IF mogel!=FALSE AND zurueck! AND demo! AND wieder!=FALSE THEN
    ende$="Mit Demomodus und Zug-  |rÅcknahme gelîst.|Das kann wohl jeder!"
    knopf$=" Leider "
  ENDIF
  IF mogel!=FALSE AND zurueck! AND demo!=FALSE AND wieder! THEN
    ende$="Ganz gut!|Aber Spielwiederholung|und ZugrÅcknahme reichen  |nicht fÅr eine Bestzeit!"
    knopf$="Na und"
  ENDIF
  IF mogel!=FALSE AND zurueck!=FALSE AND demo! AND wieder! THEN
    ende$="Erst die Lîsung im Demo-  |modus ansehen, und dann|in der Spielwiederholung|abrÑumen! So nicht!!!"
    knopf$=" Heul "
  ENDIF
  IF mogel! AND zurueck! AND demo! AND wieder!=FALSE THEN
    ende$="Demomodus, Steine wegnehmen  |und ZugrÅcknahme!|Willst Du den ersten|Preis im Mogeln gewinnen?"
    knopf$="Na klar"
  ENDIF
  IF mogel! AND zurueck! AND demo!=FALSE AND wieder! THEN
    ende$="Steine wegnehmen ,ZugrÅcknahme|und alles in der Spielwieder-|holung!|Sehr schwach!!!"
    knopf$=" #@!#% "
  ENDIF
  IF mogel! AND zurueck!=FALSE AND demo! AND wieder! THEN
    ende$="Demomodus, Steine wegnehmen  |und noch Spielwiederholung!|So nicht!!!"
    knopf$=" Nein? "
  ENDIF
  IF mogel!=FALSE AND zurueck! AND demo! AND wieder! THEN
    ende$="Erst die Lîsung im Demo-  |modus ansehen, und dann |in der Spielwiederholung|noch ZÅge zurÅcknehmen!"
    knopf$="Schwach"
  ENDIF
  IF mogel! AND zurueck! AND demo! AND wieder! THEN
    ende$="Herzlichen GlÅckwunsch!|Du hast die Meisterschaft  |im Mogeln gewonnen!!!"
    knopf$="Nun Ja"
  ENDIF
  IF zeit! THEN
    IF bestzeit%<score%(10) THEN
      BMOVE bild_adr%,bild1_adr%,32000
      DEFFILL 0,1
      PRBOX 30,60,290,160
      RBOX 32,62,288,158
      RBOX 34,64,286,156
      DEFTEXT 2,16,0,13
      TEXT 100,80,"Fantastisch!"
      DEFTEXT 1,0,0,6
      TEXT 45,100,"Du gehîrst zu den zehn besten"
      TEXT 45,110,"Drachenspielern! Ich verneige"
      TEXT 45,120,"mich vor dieser Leistung!"
      PRINT AT(10,18);"Dein Name: ";
      FORM INPUT 10,name$
      WHILE LEN(name$)<10
        name$=name$+"."
      WEND
      i%=0
      REPEAT
        INC i%
      UNTIL bestzeit%<score%(i%)
      j%=10
      WHILE j%>i%
        namen$(j%)=namen$(j%-1)
        score%(j%)=score%(j%-1)
        DEC j%
      WEND
      namen$(i%)=name$
      score%(i%)=bestzeit%
      OPEN "O",#1,"DRACHEN.SCR"
      FOR i%=1 TO 10
        PRINT #1,namen$(i%)
      NEXT i%
      FOR i%=1 TO 10
        PRINT #1,score%(i%)
      NEXT i%
      CLOSE #1
      BMOVE bild1_adr%,bild_adr%,32000
      zeit!=FALSE
      @zeit_weg
      @zeige_zeiten
    ELSE
      ALERT 0,"Ausgezeichnet!|Leider reicht die Zeit  |aber nicht um in die|Bestenliste zu gelangen!",1,"Schade",d%
      zeit!=FALSE
      @zeit_weg
    ENDIF
  ELSE
    ALERT 0,ende$,1,knopf$,d%
  ENDIF
  DEFFILL 4,1
RETURN
' ###############################################################
'            Auswertung der Dropdown-MenÅs
' ###############################################################
PROCEDURE menue
  MENU OFF
  maus_zeit%=TIMER
  '
  IF texte$(MENU(0))="  Åber Drachen " THEN
    tim1%=TIMER
    @read_me
    tim%=tim%+TIMER-tim1%
  ENDIF
  '
  IF texte$(MENU(0))="  Ende " THEN
    ALERT 2," |Mîchtest Du etwa  |schon aufhîren?",1," ja |nein",knopf%
    IF knopf%=1 THEN
      CLS
      @write_farbe
      END
    ENDIF
  ENDIF
  '
  IF texte$(MENU(0))="  neues Spiel " THEN
    DEFFILL 1,0
    PRBOX 30,80,290,120
    RBOX 32,82,288,118
    RBOX 34,84,286,116
    DEFTEXT 2,0,0,6
    TEXT 50,97,-220,"Einen Moment Geduld bitte!"
    TEXT 50,109,-220,"Die Steine werden gemischt."
    DEFFILL 4,1
    @mische
    @bau_auf
    mogel!=FALSE
    tim%=TIMER
    zeit!=TRUE
    zurueck!=FALSE
    wieder!=FALSE
    demo!=FALSE
  ENDIF
  '
  IF texte$(MENU(0))="  Spielwiederholung " THEN
    FOR i%=1 TO 144
      feld%(i%)=back%(i%)
    NEXT i%
    zeit!=FALSE
    @zeit_weg
    @bau_auf
    mogel!=FALSE
    zurueck!=FALSE
    wieder!=TRUE
  ENDIF
  '
  IF texte$(MENU(0))="  Bestzeiten " THEN
    @zeige_zeiten
  ENDIF
  '
  IF MENU(0)=16 THEN
    stfa%=1
    @steinfarbe
    MENU MENU(0),1
    MENU MENU(0)+1,0
  ENDIF
  '
  IF MENU(0)=17 THEN
    stfa%=2
    @steinfarbe
    MENU MENU(0),1
    MENU MENU(0)-1,0
  ENDIF
  '
  IF texte$(MENU(0))="  zeige Zug " AND anzahl%>1 THEN
    @finde_alles
  ENDIF
  '
  IF texte$(MENU(0))="  Zug zurÅcknehmen " AND last_zug%>0 THEN
    @nimm_zurueck
    zeit!=FALSE
    @zeit_weg
    zurueck!=TRUE
  ENDIF
  '
  IF texte$(MENU(0))="  Stein wegnehmen " THEN
    modus%=2
    DEFMOUSE 3
    pfeil!=FALSE
    PUT xkl%,ykl%,abbruch$
    REPEAT
    UNTIL MOUSEK=0
    REPEAT
      @nimm_weg
    UNTIL modus%=1
  ENDIF
  '
  IF texte$(MENU(0))="  DEMO langsam " THEN
    @demo(400)
  ENDIF
  IF texte$(MENU(0))="  DEMO schnell " THEN
    @demo(100)
  ENDIF
RETURN
' ====================================================================
'                           Åber Drachen
' ====================================================================
PROCEDURE read_me
  VOID XBIOS(5,L:bild2_adr%,L:bild2_adr%,-1)
  @inf_farbe
  DEFMOUSE 0
  pfeil!=TRUE
  REPEAT
  UNTIL MOUSEK=1 AND MOUSEX>130 AND MOUSEX<190 AND MOUSEY>184 AND MOUSEY<196
  VOID XBIOS(5,L:bild_adr%,L:bild_adr%,-1)
  @steinfarbe
RETURN
' ====================================================================
'                      Bestzeiten anzeigen
' ====================================================================
PROCEDURE zeige_zeiten
  LOCAL xo%,yo%
  DEFMOUSE 3
  pfeil!=FALSE
  BMOVE bild_adr%+1760,bild1_adr%+1760,32000-1760
  DEFFILL 1,0
  xo%=55
  yo%=20
  PRBOX xo%,yo%,320-xo%,200-yo%
  RBOX xo%+2,yo%+2,320-xo%-2,200-yo%-2
  RBOX xo%+4,yo%+4,320-xo%-4,200-yo%-4
  RBOX 125,155,194,171
  RBOX 127,157,191,169
  DEFTEXT 1,0,0,6
  TEXT 132,166,"Abbruch"
  DEFTEXT 2,16,0,13
  TEXT xo%+60,yo%+22,"Bestzeiten"
  DEFTEXT 1,0,0,6
  yo%=yo%+37
  FOR i%=1 TO 10
    i$=STR$(i%)
    IF LEN(i$)=1
      i$=" "+i$
    ENDIF
    TEXT xo%+10,yo%,i$+") "+namen$(i%)
    @zeitanzeige(score%(i%))
    TEXT xo%+135,yo%,zeit_score$
    yo%=yo%+10
  NEXT i%
  DEFFILL 4,1
  DEFTEXT 1,0,0,6
  REPEAT
    @print_zeit
  UNTIL MOUSEK=1 AND MOUSEX>125 AND MOUSEX<194 AND MOUSEY>155 AND MOUSEY<171
  BMOVE bild1_adr%+1760,bild_adr%+1760,32000-1760
RETURN
' ------------------------------------------------------------------------
'   Sekunden in Format HH:MM:SS umwandeln und nach zeit_score$ Åbergeben
' ------------------------------------------------------------------------
PROCEDURE zeitanzeige(sek%)
  LOCAL st%,mi%,se%,st$,mi$,se$
  st%=sek% DIV 3600
  mi%=(sek%-st%*3600) DIV 60
  se%=sek%-st%*3600-mi%*60
  st$=STR$(st%)
  mi$=STR$(mi%)
  se$=STR$(se%)
  IF LEN(st$)=1 THEN
    st$="0"+st$
  ENDIF
  IF LEN(mi$)=1 THEN
    mi$="0"+mi$
  ENDIF
  IF LEN(se$)=1 THEN
    se$="0"+se$
  ENDIF
  zeit_score$=st$+":"+mi$+":"+se$
RETURN
' ====================================================================
'                alle moeglichen Zuege finden
' ====================================================================
PROCEDURE finde_alles
  IF select%<>0 THEN
    a%=select%
    select%=0
    @bau_stueck(a%)
  ENDIF
  ab_flag!=FALSE
  FOR i1%=1 TO 143
    FOR j1%=i1%+1 TO 144
      IF feld%(i1%)>0
        IF feld%(drueber%(i1%))=0 AND feld%(drueber%(j1%))=0 THEN
          IF feld%(links%(i1%))=0 OR feld%(rechts%(i1%))=0 THEN
            IF feld%(links%(j1%))=0 OR feld%(rechts%(j1%))=0 THEN
              IF feld%(i1%)=feld%(j1%) THEN
                @zeige_an(i1%,j1%)
              ELSE
                IF feld%(i1%)>34 AND feld%(j1%)>34 THEN
                  IF feld%(i1%)>=35 AND feld%(i1%)<=38 AND feld%(j1%)>=35 AND feld%(j1%)<=38 THEN
                    @zeige_an(i1%,j1%)
                  ELSE
                    IF feld%(i1%)>=39 AND feld%(i1%)<=42 AND feld%(j1%)>=39 AND feld%(j1%)<=42 THEN
                      @zeige_an(i1%,j1%)
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
        ENDIF
      ENDIF
      EXIT IF ab_flag!
    NEXT j1%
    EXIT IF ab_flag!
  NEXT i1%
  IF ab_flag! THEN
    @text_weg
  ELSE
    PUT xkl%,ykl%,abbruch$
    PUT xgr%,ygr%,lost$
    ab_flag!=FALSE
    REPEAT
      REPEAT
      UNTIL MOUSEK=1
      IF MOUSEX>xkl%+3 AND MOUSEX<xkl%+43 AND MOUSEY>ykl%+3 AND MOUSEY<ykl%+15 THEN
        @text_weg
        ab_flag!=TRUE
      ENDIF
    UNTIL ab_flag!
  ENDIF
RETURN
' --------------------------------------------------------------------
'                  moeglichen Zug anzeigen
' --------------------------------------------------------------------
PROCEDURE zeige_an(a%,b%)
  IF a%<>2 OR feld%(5)=0 OR feld%(1)=0 THEN    ! Sonderfall 2 behandeln
    IF b%<>2 OR feld%(5)=0 OR feld%(1)=0 THEN
      PUT xkl%,ykl%,abbruch$
      PUT xgr%,ygr%,naechster$
      zeige%=a%
      @bau_stueck(a%)
      select%=b%
      @bau_stueck(b%)
      treffer!=FALSE
      REPEAT
        REPEAT
          @print_zeit
        UNTIL MOUSEK=1
        IF MOUSEX>xkl%+3 AND MOUSEX<xkl%+43 AND MOUSEY>ykl%+3 AND MOUSEY<ykl%+15 THEN
          ab_flag!=TRUE
          treffer!=TRUE
        ELSE
          IF MOUSEX>xgr%+3 AND MOUSEX<xgr%+43 AND MOUSEY>ygr%+3 AND MOUSEY<ygr%+19 THEN
            ab_flag!=FALSE
            treffer!=TRUE
          ENDIF
        ENDIF
      UNTIL treffer!=TRUE
      zeige%=0
      @bau_stueck(a%)
      select%=0
      @bau_stueck(b%)
    ENDIF
  ENDIF
RETURN
' ====================================================================
'                      einen Zug zurÅcknehmen
' ====================================================================
PROCEDURE nimm_zurueck
  IF select%<>0 THEN
    a%=select%
    select%=0
    @bau_stueck(a%)
  ENDIF
  IF zuege%(last_zug%)>1000 THEN          ! nur einen Stein zurueck
    feld%(zuege%(last_zug%)-1000)=back%(zuege%(last_zug%)-1000)
    @bau_stueck(zuege%(last_zug%)-1000)
    INC anzahl%
    DEC last_zug%
  ELSE                                    ! 2 Steine zurÅck
    feld%(zuege%(last_zug%))=back%(zuege%(last_zug%))
    @bau_stueck(zuege%(last_zug%))
    DEC last_zug%
    feld%(zuege%(last_zug%))=back%(zuege%(last_zug%))
    @bau_stueck(zuege%(last_zug%))
    anzahl%=anzahl%+2
    DEC last_zug%
  ENDIF
  @print_anzahl
  @menue_anzeige
RETURN
' --------------------------------------------------------------------
'                            Demomodus
' --------------------------------------------------------------------
PROCEDURE demo(time%)
  demo!=TRUE
  zeit!=FALSE
  @zeit_weg
  demo_ende!=FALSE
  PUT xkl%,ykl%,abbruch$
  jj%=1
  REPEAT
    select%=abbau%(jj%)                   ! Steine anzeigen
    @bau_stueck(select%)
    zeige%=abbau%(jj%+1)
    @bau_stueck(zeige%)
    zeit%=TIMER
    REPEAT
      IF MOUSEK=1 AND MOUSEX>xkl%+3 AND MOUSEX<xkl%+43 AND MOUSEY>ykl%+3 AND MOUSEY<ykl%+15 THEN
        demo_ende!=TRUE
      ENDIF
    UNTIL TIMER>zeit%+time% OR demo_ende!
    '
    select%=0
    INC last_zug%
    zuege%(last_zug%)=abbau%(jj%)          ! Steine wegnehmen
    feld%(abbau%(jj%))=0
    @bau_stueck(abbau%(jj%))
    zeige%=0
    INC last_zug%
    zuege%(last_zug%)=abbau%(jj%+1)
    feld%(abbau%(jj%+1))=0
    @bau_stueck(abbau%(jj%+1))
    anzahl%=anzahl%-2
    @print_anzahl
    jj%=jj%+2
  UNTIL jj%=145 OR demo_ende!
  @text_weg
  IF jj%=145 THEN
    ALERT 0,"Tja,|so einfach wÑre  |das gewesen!",1," Ach so ",d%
  ENDIF
  @menue_anzeige
RETURN
' ####################################################################
'      Unterprogramme um angeklickten Stein zu identifizieren
' ####################################################################
' ====================================================================
'   Nummer des angeklickten Steines berechnen und in Nummer% liefern
' ====================================================================
PROCEDURE suche_stein
  nummer%=0
  MOUSE mx%,my%,tasten%
  IF tasten%=1 THEN
    @sonder(144)                        ! Sondersteine behandeln
    @sonder(143)
    @sonder(2)
    @sonder(1)
    @suche_ebene(2,2,91,4)              ! Ebenen 4 - 1 durchsuchen
    @suche_ebene(4,4,107,3)
    @suche_ebene(6,6,119,2)
    @suche_ebene(12,8,139,1)
    REPEAT
    UNTIL MOUSEK=0
  ENDIF
RETURN
' ----------------------------------------------------------------
'                  Abfrage der Sondersteine
' ----------------------------------------------------------------
PROCEDURE sonder(st%)
  IF nummer%=0 AND feld%(st%)<>0 THEN
    IF mx%>x_koord%(st%) AND mx%<x_koord%(st%)+20 AND my%>y_koord%(st%) AND my%<y_koord%(st%)+20 THEN
      nummer%=st%
    ENDIF
  ENDIF
RETURN
' ----------------------------------------------------------------
'                    Eine Ebene absuchen
'   Nummer = 0 kein Stein gefunden / = -1 weitere Suche zwecklos
' ----------------------------------------------------------------
PROCEDURE suche_ebene(ax%,ay%,ecke%,eb%)
  IF nummer%=0 THEN
    @welcher_stein(ax%,ay%,x_koord%(ecke%),y_koord%(ecke%))
    IF klotz%<>0 THEN
      nummer%=ebene%(eb%,klotz%)
      IF feld%(nummer%)=0 THEN
        nummer%=0
      ENDIF
      IF feld%(drueber%(nummer%))<>0 THEN
        nummer%=-1
      ENDIF
    ENDIF
  ENDIF
RETURN
' ---------------------------------------------------------------
'    liefert die Nummer des angeklickten Steines in einer Ebene,
'    wobei Stein 1 oben links liegt, in Klotz%
' ---------------------------------------------------------------
PROCEDURE welcher_stein(anz_x%,anz_y%,kx%,ky%)
  klotz%=0
  relx%=mx%-kx%
  rely%=my%-ky%
  IF relx%>0 AND relx%<anz_x%*20 AND rely%>0 AND rely%<anz_y%*20 THEN
    klotz%=relx% DIV 20+(rely% DIV 20)*anz_x%+1
  ENDIF
RETURN
' ################################################################
'        Unterprogramme zur Darstellung der Steine
' ################################################################
' ================================================================
'             ein Feld mit Nachbarsteinen zeichnen
' ================================================================
PROCEDURE bau_stueck(stone%)
  akt%=stone%
  xk%=x_koord%(stone%)
  yk%=y_koord%(stone%)
  VOID XBIOS(5,L:bild1_adr%,L:-1,-1)
  PBOX xk%-6,yk%-6,xk%+26,yk%+26
  IF stone%=144 THEN                      ! Sonderfall Mittelstein
    @leg_hin(71)
    @leg_hin(72)
    @leg_hin(91)
    @leg_hin(92)
    @leg_hin(144)
  ELSE
    WHILE drunter%(stone%)<>0             ! untersten Stein bestimmen
      stone%=drunter%(stone%)
    WEND
    @bau_turm(diag_ro%(stone%))           ! Stein mit Nachbarn aufbauen
    @bau_turm(rechts%(stone%))
    @bau_turm(diag_ru%(stone%))
    @bau_turm(oben%(stone%))
    @bau_turm(stone%)
    @bau_turm(unten%(stone%))
    @bau_turm(diag_lo%(stone%))
    @bau_turm(links%(stone%))
    @bau_turm(diag_lu%(stone%))
  ENDIF
  GET xk%-5,yk%-5,xk%+25,yk%+25,neu$
  VOID XBIOS(5,L:bild_adr%,L:-1,-1)
  PUT xk%-5,yk%-5,neu$
RETURN
' ---------------------------------------------------
'  Hilfsroutine fÅr bau_stueck (Baut einen Turm auf)
' ---------------------------------------------------
PROCEDURE bau_turm(baustein%)
  WHILE baustein%<>0
    @leg_hin(baustein%)
    baustein%=drueber%(baustein%)
  WEND
RETURN
' ===============================================================
'           Spielfeld auf dem Bildschirm darstellen
' ===============================================================
PROCEDURE bau_auf
  select%=0
  zeige%=0
  VOID XBIOS(5,L:bild1_adr%,L:-1,-1)
  PBOX 0,0,319,199
  VOID XBIOS(5,L:bild_adr%,L:-1,-1)
  BMOVE bild1_adr%+1760,bild_adr%+1760,32000-1760
  FOR i%=1 TO 144
    @leg_hin(i%)
  NEXT i%
  anzahl%=144
  @print_anzahl
  @menue_anzeige
  select%=0
  last_zug%=0
  modus%=1
RETURN
' ==============================================================
'         Einen Stein auf dem Spielfeld ablegen
' ==============================================================
PROCEDURE leg_hin(i%)
  IF feld%(i%)<>0 THEN
    x%=x_koord%(i%)                                ! Spielstein ablegen
    y%=y_koord%(i%)
    PUT x%-3,y%,maske$,1
    PUT x%-3,y%,stein$(feld%(i%)),7
    '                                              ! Schatten zeichnen
    IF i%=4 THEN                                   ! Sonderfall Pos. 4
      PUT x%,y%-3,s_o$,13
      IF feld%(2)=0 THEN
        PUT x%+20,y%-3,s_r$,13
      ELSE
        PUT x%+20,y%-3,s_ro$,13
      ENDIF
    ELSE
      IF i%=5 THEN                                 ! Sonderfall Pos 5.
        IF feld%(4)=0 THEN
          IF feld%(2)=0 THEN
            PUT x%,y%-3,s_o$,13
            PUT x%+20,y%-3,s_r$,13
          ELSE
            PUT x%,y%-3,s_oa$,13
            PUT x%+20,y%-3,s_ru$,13
          ENDIF
        ELSE
          IF feld%(2)=0 THEN
            PUT x%+20,y%-3,s_r$,13
          ELSE
            PUT x%+20,y%-3,s_ru$,13
          ENDIF
        ENDIF
      ELSE
        IF i%=143 THEN                             ! Sonderfall Pos. 143
          IF feld%(140)=0 THEN
            PUT x%,y%-3,s_o$,13
          ELSE
            PUT x%,y%-3,s_oa$,13
          ENDIF
          IF (feld%(140)=0) AND (feld%(141)=0) THEN
            PUT x%+20,y%-3,s_r$,13
          ELSE
            IF feld%(140)=0 THEN
              PUT x%+20,y%-3,s_ro$,13
            ENDIF
            IF feld%(141)=0 THEN
              PUT x%+20,y%-3,s_ru$,13
            ENDIF
          ENDIF
        ELSE                                       ! alle anderen Steine
          IF feld%(oben%(i%))=0 THEN
            IF feld%(diag_ro%(i%))=0 THEN
              PUT x%,y%-3,s_o$,13
            ELSE
              PUT x%,y%-3,s_oa$,13
            ENDIF
          ENDIF
          IF feld%(rechts%(i%))=0 THEN
            IF feld%(diag_ro%(i%))=0 THEN
              PUT x%+20,y%-3,s_r$,13
            ELSE
              PUT x%+20,y%-3,s_ra$,13
            ENDIF
          ENDIF
        ENDIF
      ENDIF
    ENDIF
    IF i%=select% OR i%=zeige% THEN
      PUT x%,y%,inv_maske$,13
    ENDIF
  ENDIF
RETURN
' ####################################################################
'                     allgemeine Unterprogramme
' ####################################################################
' --------------------------------------------------------------------
'                       Menue initialisieren
' --------------------------------------------------------------------
PROCEDURE init_menu
  VOID XBIOS(5,L:bild1_adr%,L:-1,-1)
  PBOX 0,0,319,12
  MENU texte$()
  ON MENU  GOSUB menue
  @menue_anzeige
  @print_anzahl
  VOID XBIOS(5,L:bild_adr%,L:-1,-1)
  BMOVE bild1_adr%,bild_adr%,1760
  ON MENU IBOX 1,0,0,639,10 GOSUB maus_pfeil
  ON MENU OBOX 2,0,0,639,10 GOSUB maus_hand
  COLOR 0
  LINE 0,9,319,9
  COLOR 1
  LINE 0,10,319,10
RETURN
' --------------------------------------------------------------------
'      MenÅpunkte je Anzahl Steine selektieren oder deselektieren
' --------------------------------------------------------------------
PROCEDURE menue_anzeige
  IF anzahl%<2 THEN             ! zeige Zug
    MENU 22,2
  ELSE
    MENU 22,3
  ENDIF
  IF anzahl%=144 THEN           ! Zug zurÅcknehmen
    MENU 23,2                   ! und Demomodus
    MENU 26,3
    MENU 27,3
  ELSE
    MENU 23,3
    MENU 26,2
    MENU 27,2
  ENDIF
  IF anzahl%=0 THEN             ! Stein wegnehmen
    MENU 24,2
  ELSE
    MENU 24,3
  ENDIF
RETURN
' --------------------------------------------------------------------
'                       Mauspfeil einschalten
' --------------------------------------------------------------------
PROCEDURE maus_pfeil
  IF NOT pfeil! THEN
    DEFMOUSE 0
    pfeil!=TRUE
  ENDIF
RETURN
' --------------------------------------------------------------------
'                       Maushand einschalten
' --------------------------------------------------------------------
PROCEDURE maus_hand
  IF pfeil! THEN
    DEFMOUSE 3
    pfeil!=FALSE
  ENDIF
RETURN
' --------------------------------------------------------------------
'               Verbleibende Steine anzeigen
' --------------------------------------------------------------------
PROCEDURE print_anzahl
  anz$=STR$(anzahl%)
  WHILE LEN(anz$)<3
    anz$=" "+anz$
  WEND
  ver_st$=CHR$(27)+"Y"+CHR$(32)+CHR$(67)+anz$+CHR$(0)
  VOID GEMDOS(9,L:LPEEK(*ver_st$))
RETURN
' ----------------------------------------------------------
'                        Zeitanzeige
' ----------------------------------------------------------
PROCEDURE print_zeit
  IF zeit! THEN
    bestzeit%=(TIMER-tim%)/200
    @zeitanzeige(bestzeit%)
    led_score$=CHR$(27)+"Y"+CHR$(32)+CHR$(55)+zeit_score$+CHR$(0)
    VOID GEMDOS(9,L:LPEEK(*led_score$))
  ENDIF
RETURN
' ---------------------------------------------------------
'       Zeitanzeige nach mogeln wegnehmen
' ---------------------------------------------------------
PROCEDURE zeit_weg
  led_score$=CHR$(27)+"Y"+CHR$(32)+CHR$(55)+"         "+CHR$(0)
  VOID GEMDOS(9,L:LPEEK(*led_score$))
RETURN
' ----------------------------------------------------------
'   Textboxen fÅr Zuganzeige und Stein wegnehmen entfernen
' ----------------------------------------------------------
PROCEDURE text_weg
  HIDEM
  VOID XBIOS(5,L:bild1_adr%,L:-1,-1)
  PBOX xkl%,ykl%,xkl%+48,ykl%+20
  PBOX xgr%,ygr%,xgr%+48,ygr%+24
  GET xkl%,ykl%,xkl%+48,ykl%+20,klraster$
  GET xgr%,ygr%,xgr%+48,ygr%+24,grraster$
  VOID XBIOS(5,L:bild_adr%,L:-1,-1)
  PUT xkl%,ykl%,klraster$
  PUT xgr%,ygr%,grraster$
  SHOWM
RETURN
' ===============================================================
'                Spielfeld im Speicher aufbauen
' ===============================================================
PROCEDURE mische
  FOR i%=1 TO 4                    ! Sondersteine mischen (Jahrezeiten)
    misch%(i%)=i%+34
  NEXT i%
  FOR i%=4 TO 1 STEP -1
    j%=RANDOM(i%)+1
    jahr%(i%)=misch%(j%)
    misch%(j%)=misch%(i%)
  NEXT i%
  '
  FOR i%=1 TO 4                    ! Sondersteine mischen (MUM u.s.w.)
    misch%(i%)=i%+38
  NEXT i%
  FOR i%=4 TO 1 STEP -1
    j%=RANDOM(i%)+1
    mum%(i%)=misch%(j%)
    misch%(j%)=misch%(i%)
  NEXT i%
  '
  FOR i%=1 TO 36                   ! Steine gemischt in SCHACHTEL legen
    misch%(i%*2-1)=i%
    misch%(i%*2)=i%
  NEXT i%
  FOR i%=72 TO 1 STEP -1
    j%=RANDOM(i%)+1
    schachtel%(i%*2)=misch%(j%)
    schachtel%(i%*2-1)=misch%(j%)
    misch%(j%)=misch%(i%)
  NEXT i%
  '
  j%=1                            ! Sondersteine verteilen
  k%=1
  FOR i%=1 TO 144
    IF schachtel%(i%)=35 THEN
      schachtel%(i%)=jahr%(j%)
      INC j%
    ELSE
      IF schachtel%(i%)=36 THEN
        schachtel%(i%)=mum%(k%)
        INC k%
      ENDIF
    ENDIF
  NEXT i%
  '
  REPEAT
    FOR i%=1 TO 144                       ! Steine auf Spielfeld verteilen
      misch%(i%)=i%
      feld%(i%)=0
    NEXT i%
    k%=1
    FOR i%=1 TO 72
      drauf_count!=TRUE                       ! Versuchen auf oder
      '                                       ! neben gleichen Stein zu legen
      REPEAT
        stok!=FALSE
        IF drauf_count! THEN
          drauf_count!=FALSE
          FOR jj%=1 TO 145-k%                 ! Versuch auf Stein zu legen
            st%=misch%(jj%)
            IF feld%(drunter%(st%))=schachtel%(k%) AND (feld%(links%(st%))<>0 OR feld%(rechts%(st%))<>0) THEN
              stok!=TRUE
            ENDIF
            EXIT IF stok!
          NEXT jj%
          IF NOT stok! THEN
            FOR jj%=1 TO 145-k%               ! Versuch neben Stein zu legen
              st%=misch%(jj%)
              IF feld%(rechts%(st%))=schachtel%(k%) OR feld%(links%(st%))=schachtel%(k%) THEN
                stok!=TRUE
              ENDIF
              EXIT IF stok!
            NEXT jj%
          ENDIF
        ENDIF
        '
        IF NOT stok!                          !sonst Zufallsstein
          st%=RANDOM(145-k%)+1
          st%=misch%(st%)
        ENDIF
        IF st%>2 AND st%<143 THEN             ! normale Positionen
          @suche_feld(st%)
          feld!=TRUE
        ELSE
          @teste_sonder(st%)                  ! Sonderpositionen
        ENDIF
        IF feld! THEN
          @trage_aus(st%,145-k%)
          feld%(st%)=schachtel%(k%)
          abbau%(145-k%)=st%
          INC k%
        ENDIF
      UNTIL feld!
      '
      st1%=st%
      versuch%=0
      REPEAT
        st%=RANDOM(145-k%)+1                  ! 2. Stein ablegen
        st%=misch%(st%)
        IF st%>2 AND st%<143 THEN             ! normale Positionen
          @suche_feld(st%)
          feld!=TRUE
          IF drunter%(st%)=st1% THEN
            feld!=FALSE
          ELSE
            IF links%(st%)=st1% AND links%(links%(st%))<>0 THEN
              feld!=FALSE
            ELSE
              IF rechts%(st%)=st1% AND rechts%(rechts%(st%))<>0 THEN
                feld!=FALSE
              ENDIF
            ENDIF
          ENDIF
        ELSE
          @teste_sonder(st%)                  ! Sonderpositionen
          IF st%=1 AND st1%=2 THEN
            feld!=FALSE
          ENDIF
          IF st%=144 AND (st1%=71 OR st1%=72 OR st1%=91 OR st1%=92) THEN
            feld!=FALSE
          ENDIF
          IF st%=2 AND (st1%=4 OR st1%=5) THEN
            feld!=FALSE
          ENDIF
          IF st%=143 AND (st1%=140 OR st1%=141) THEN
            feld!=FALSE
          ENDIF
        ENDIF
        IF feld! THEN
          @trage_aus(st%,145-k%)
          feld%(st%)=schachtel%(k%)
          abbau%(145-k%)=st%
          INC k%
        ELSE
          INC versuch%                   ! nach 10 FehlschlÑgen neuen Aufbau
        ENDIF
      UNTIL feld! OR versuch%=10
      EXIT IF versuch%=10
    NEXT i%
  UNTIL versuch%<10
  FOR i%=1 TO 144
    back%(i%)=feld%(i%)
  NEXT i%
  '                                      ! Zufallsreihenfolge fÅr Zug zeigen
  FOR i%=1 TO 72
    misch%(i%)=i%
  NEXT i%
  FOR i%=72 TO 1 STEP -1
    j%=RANDOM(i%)+1
    reihe%(i%)=misch%(j%)
    misch%(j%)=misch%(i%)
  NEXT i%
RETURN
' ---------------------------------------------------------
'           Feld zum Steineanbau suchen
' ---------------------------------------------------------
PROCEDURE suche_feld(j%)
  LOCAL stone%
  '                                                    Ebene suchen
  WHILE drunter%(j%)<>0 AND feld%(drunter%(j%))=0
    j%=drunter%(j%)
  WEND
  '                                                    Position suchen
  stone%=j%
  WHILE links%(j%)<>0 AND feld%(links%(j%))=0
    j%=links%(j%)
  WEND
  IF feld%(links%(j%))<>0 THEN
    st%=j%                                             ! links gefunden
  ELSE
    j%=stone%
    WHILE rechts%(j%)<>0 AND feld%(rechts%(j%))=0
      j%=rechts%(j%)
    WEND
    IF feld%(rechts%(j%))<>0 THEN
      st%=j%                                           ! rechts gefunden
    ELSE
      st%=stone%                                       ! alte Position
    ENDIF
  ENDIF
RETURN
' --------------------------------------------------
'             Sondersteine behandeln
' --------------------------------------------------
PROCEDURE teste_sonder(st%)
  feld!=FALSE
  IF st%=1 AND feld%(2)<>0 THEN
    feld!=TRUE
  ELSE
    IF st%=2 AND feld%(4)<>0 AND feld%(5)<>0 THEN
      feld!=TRUE
    ELSE
      IF st%=143 AND feld%(140)<>0 AND feld%(141)<>0 THEN
        feld!=TRUE
      ELSE
        IF st%=144 AND feld%(71)<>0 AND feld%(72)<>0 AND feld%(91)<>0 AND feld%(92)<>0 THEN
          feld!=TRUE
        ENDIF
      ENDIF
    ENDIF
  ENDIF
RETURN
' --------------------------------------------------
'            Feld aus Liste austragen
' --------------------------------------------------
PROCEDURE trage_aus(feld%,anz%)
  LOCAL i%,schluss!
  i%=1
  schluss!=FALSE
  REPEAT
    IF misch%(i%)=feld% THEN
      misch%(i%)=misch%(anz%)
      schluss!=TRUE
    ELSE
      INC i%
    ENDIF
  UNTIL schluss!
RETURN
' ###############################################################
'        Unterprogramme zur Programminitialisierung
' ###############################################################
' ===============================================================
'             Farbpalette  der Steine setzen
' ===============================================================
PROCEDURE steinfarbe
  FOR i%=0 TO 15                              ! Farbpalette setzen
    SETCOLOR i%,DPEEK(bild1_adr%-156+stfa%*32+2*i%)
  NEXT i%
RETURN
' ===============================================================
'             Farbpalette der Beschreibung setzen
' ===============================================================
PROCEDURE inf_farbe
  FOR i%=0 TO 15                              ! Farbpalette setzen
    SETCOLOR i%,DPEEK(bild2_adr%-124+2*i%)
  NEXT i%
RETURN
' ===============================================================
'               Standardfarbpalette lesen
' ===============================================================
PROCEDURE read_farbe
  LOCAL reg%
  FOR reg%=0 TO 15
    st_farbe%(reg%)=XBIOS(7,reg%,-1)
  NEXT reg%
RETURN
' ==============================================================
'               Standardfarbpalette schreiben
' ==============================================================
PROCEDURE write_farbe
  LOCAL reg%
  FOR reg%=0 TO 15
    SETCOLOR reg%,st_farbe%(reg%)
  NEXT reg%
RETURN
' ===============================================================
'                Steine in Stringvariablen ablegen
' ===============================================================
PROCEDURE hole_steine
  IF EXIST("DRACHEN.DAT")=0 THEN
    ALERT 3,"Ohne DRACHEN.DAT gehts|leider nicht!",1,"Das wars",i%
    END
  ENDIF
  BLOAD "DRACHEN.DAT",bild1_adr%-128
  VOID XBIOS(5,L:bild1_adr%,L:-1,-1)
  FOR i%=1 TO 42                              ! Steine
    x%=((i%-1) MOD 12)*25
    y%=((i%-1) DIV 12)*25
    GET x%,y%,x%+23,y%+23,stein$(i%)
  NEXT i%
  GET 0,125,23,148,maske$                     ! Steinmaske
  GET 175,125,195,145,inv_maske$              ! Invertierungsmaske
  GET 25,125,48,128,s_o$                      ! Schatten oben
  GET 50,125,53,148,s_r$                      ! Schatten rechts
  GET 75,125,95,128,s_oa$                     ! Schatten oben abgeschnitten
  GET 100,125,103,148,s_ra$                   ! Schatten rechts abgeschnitten
  GET 125,125,128,148,s_ru$                   ! Schatten rechts unten
  GET 150,125,153,138,s_ro$                   ! Schatten rechts oben
  GET 50,175,98,195,abbruch$                  ! Abbruch Meldung
  GET 100,175,148,199,lost$                   ! Leider verloren Meldung
  GET 150,175,198,199,naechster$              ! Naechster Zug
  VOID XBIOS(5,L:bild_adr%,L:-1,-1)
RETURN
' ==============================================
'              Highscores laden
' ==============================================
PROCEDURE hole_score
  IF EXIST("DRACHEN.SCR") THEN
    OPEN "I",#1,"DRACHEN.SCR"
    FOR i%=1 TO 10
      INPUT #1,namen$(i%)
    NEXT i%
    FOR i%=1 TO 10
      INPUT #1,score%(i%)
    NEXT i%
    CLOSE #1
  ELSE
    FOR i%=1 TO 10
      namen$(i%)=".........."
      score%(i%)=359999
    NEXT i%
  ENDIF
RETURN
' =============================================
'            Beschreibung laden
' =============================================
PROCEDURE hole_beschreibung
  IF EXIST("DRACHEN.INF")=0 THEN
    ALERT 3,"Ohne DRACHEN.INF gehts|leider nicht!",1,"Das wars",i%
    END
  ENDIF
  BLOAD "DRACHEN.INF",bild2_adr%-128
RETURN
' =============================================
'               Arrays vorbelegen
' =============================================
PROCEDURE lade_arrays
  RESTORE x_daten
  FOR i%=1 TO 144
    READ x_koord%(i%)
  NEXT i%
  RESTORE y_daten
  FOR i%=1 TO 144
    READ y_koord%(i%)
  NEXT i%
  RESTORE o_daten
  FOR i%=1 TO 144
    READ oben%(i%)
  NEXT i%
  RESTORE u_daten
  FOR i%=1 TO 144
    READ unten%(i%)
  NEXT i%
  RESTORE l_daten
  FOR i%=1 TO 144
    READ links%(i%)
  NEXT i%
  RESTORE r_daten
  FOR i%=1 TO 144
    READ rechts%(i%)
  NEXT i%
  RESTORE drueber_daten
  FOR i%=1 TO 144
    READ drueber%(i%)
  NEXT i%
  RESTORE drunter_daten
  FOR i%=1 TO 144
    READ drunter%(i%)
  NEXT i%
  RESTORE ro_daten
  FOR i%=1 TO 144
    READ diag_ro%(i%)
  NEXT i%
  RESTORE ru_daten
  FOR i%=1 TO 144
    READ diag_ru%(i%)
  NEXT i%
  RESTORE lo_daten
  FOR i%=1 TO 144
    READ diag_lo%(i%)
  NEXT i%
  RESTORE lu_daten
  FOR i%=1 TO 144
    READ diag_lu%(i%)
  NEXT i%
  RESTORE eb1_daten
  FOR i%=1 TO 96
    READ ebene%(1,i%)
  NEXT i%
  RESTORE eb2_daten
  FOR i%=1 TO 36
    READ ebene%(2,i%)
  NEXT i%
  RESTORE eb3_daten
  FOR i%=1 TO 16
    READ ebene%(3,i%)
  NEXT i%
  RESTORE eb4_daten
  FOR i%=1 TO 4
    READ ebene%(4,i%)
  NEXT i%
  xgr%=x_koord%(11)+30
  ygr%=y_koord%(11)+8
  xkl%=x_koord%(8)+30
  ykl%=y_koord%(8)-8
RETURN
' #########################################################
'               Verschiedene Data-Felder
' #########################################################
'
'  X-Koordinaten der 144 Spielfelder
'
x_daten:
DATA 290
DATA 270
DATA 250,250,250,250
DATA 230,230,230,230,230,230
DATA 210,210,210,210,210,210,210,210
DATA 190,190,190,190,190,190,190,190
DATA 193,193,193,193,193,193
DATA 170,170,170,170,170,170,170,170
DATA 173,173,173,173,173,173
DATA 176,176,176,176
DATA 150,150,150,150,150,150,150,150
DATA 153,153,153,153,153,153
DATA 156,156,156,156
DATA 159,159
DATA 130,130,130,130,130,130,130,130
DATA 133,133,133,133,133,133
DATA 136,136,136,136
DATA 139,139
DATA 110,110,110,110,110,110,110,110
DATA 113,113,113,113,113,113
DATA 116,116,116,116
DATA 90,90,90,90,90,90,90,90
DATA 93,93,93,93,93,93
DATA 70,70,70,70,70,70,70,70
DATA 50,50,50,50,50,50
DATA 30,30,30,30
DATA 10
DATA 152
'
' Y-Koordinaten der 144 Spielfelder
'
y_daten:
DATA 95
DATA 95
DATA 25,85,105,165
DATA 25,65,85,105,125,165
DATA 25,45,65,85,105,125,145,165
DATA 25,45,65,85,105,125,145,165
DATA 42,62,82,102,122,142
DATA 25,45,65,85,105,125,145,165
DATA 42,62,82,102,122,142
DATA 59,79,99,119
DATA 25,45,65,85,105,125,145,165
DATA 42,62,82,102,122,142
DATA 59,79,99,119
DATA 76,96
DATA 25,45,65,85,105,125,145,165
DATA 42,62,82,102,122,142
DATA 59,79,99,119
DATA 76,96
DATA 25,45,65,85,105,125,145,165
DATA 42,62,82,102,122,142
DATA 59,79,99,119
DATA 25,45,65,85,105,125,145,165
DATA 42,62,82,102,122,142
DATA 25,45,65,85,105,125,145,165
DATA 25,65,85,105,125,165
DATA 25,85,105,165
DATA 95
DATA 83
'
'      obere Nachbarn der Steine
'
o_daten:
DATA 0
DATA 0
DATA 0,0,4,0
DATA 0,0,8,9,10,0
DATA 0,13,14,15,16,17,18,19
DATA 0,21,22,23,24,25,26,27
DATA 0,29,30,31,32,33
DATA 0,35,36,37,38,39,40,41
DATA 0,43,44,45,46,47
DATA 0,49,50,51
DATA 0,53,54,55,56,57,58,59
DATA 0,61,62,63,64,65
DATA 0,67,68,69
DATA 0,71
DATA 0,73,74,75,76,77,78,79
DATA 0,81,82,83,84,85
DATA 0,87,88,89
DATA 0,91
DATA 0,93,94,95,96,97,98,99
DATA 0,101,102,103,104,105
DATA 0,107,108,109
DATA 0,111,112,113,114,115,116,117
DATA 0,119,120,121,122,123
DATA 0,125,126,127,128,129,130,131
DATA 0,0,134,135,136,0
DATA 0,0,140,0
DATA 0
DATA 0
'
'       untere Nachbarn der Steine
'
u_daten:
DATA 0
DATA 0
DATA 0,5,0,0
DATA 0,9,10,11,0,0
DATA 14,15,16,17,18,19,20,0
DATA 22,23,24,25,26,27,28,0
DATA 30,31,32,33,34,0
DATA 36,37,38,39,40,41,42,0
DATA 44,45,46,47,48,0
DATA 50,51,52,0
DATA 54,55,56,57,58,59,60,0
DATA 62,63,64,65,66,0
DATA 68,69,70,0
DATA 72,0
DATA 74,75,76,77,78,79,80,0
DATA 82,83,84,85,86,0
DATA 88,89,90,0
DATA 92,0
DATA 94,95,96,97,98,99,100,0
DATA 102,103,104,105,106,0
DATA 108,109,110,0
DATA 112,113,114,115,116,117,118,0
DATA 120,121,122,123,124,0
DATA 126,127,128,129,130,131,132,0
DATA 0,135,136,137,0,0
DATA 0,141,0,0
DATA 0
DATA 0
'
'       linke Nachbarn der Steine
'
l_daten:
DATA 2
DATA 4
DATA 7,9,10,12
DATA 13,15,16,17,18,20
DATA 21,22,23,24,25,26,27,28
DATA 35,36,37,38,39,40,41,42
DATA 43,44,45,46,47,48
DATA 53,54,55,56,57,58,59,60
DATA 61,62,63,64,65,66
DATA 67,68,69,70
DATA 73,74,75,76,77,78,79,80
DATA 81,82,83,84,85,86
DATA 87,88,89,90
DATA 91,92
DATA 93,94,95,96,97,98,99,100
DATA 101,102,103,104,105,106
DATA 107,108,109,110
DATA 0,0
DATA 111,112,113,114,115,116,117,118
DATA 119,120,121,122,123,124
DATA 0,0,0,0
DATA 125,126,127,128,129,130,131,132
DATA 0,0,0,0,0,0
DATA 133,0,134,135,136,137,0,138
DATA 139,0,140,141,0,142
DATA 0,143,143,0
DATA 0
DATA 0
'
'         rechte Nachbarn der Steine
'
r_daten:
DATA 0
DATA 1
DATA 0,2,2,0
DATA 3,0,4,5,0,6
DATA 7,0,8,9,10,11,0,12
DATA 13,14,15,16,17,18,19,20
DATA 0,0,0,0,0,0
DATA 21,22,23,24,25,26,27,28
DATA 29,30,31,32,33,34
DATA 0,0,0,0
DATA 35,36,37,38,39,40,41,42
DATA 43,44,45,46,47,48
DATA 49,50,51,52
DATA 0,0
DATA 53,54,55,56,57,58,59,60
DATA 61,62,63,64,65,66
DATA 67,68,69,70
DATA 71,72
DATA 73,74,75,76,77,78,79,80
DATA 81,82,83,84,85,86
DATA 87,88,89,90
DATA 93,94,95,96,97,98,99,100
DATA 101,102,103,104,105,106
DATA 111,112,113,114,115,116,117,118
DATA 125,127,128,129,130,132
DATA 133,135,136,138
DATA 140
DATA 0
'
'        Nachbar Åber stein
'
drueber_daten:
DATA 0
DATA 0
DATA 0,0,0,0
DATA 0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0
DATA 0,29,30,31,32,33,34,0
DATA 0,0,0,0,0,0
DATA 0,43,44,45,46,47,48,0
DATA 0,49,50,51,52,0
DATA 0,0,0,0
DATA 0,61,62,63,64,65,66,0
DATA 0,67,68,69,70,0
DATA 0,71,72,0
DATA 144,144
DATA 0,81,82,83,84,85,86,0
DATA 0,87,88,89,90,0
DATA 0,91,92,0
DATA 144,144
DATA 0,101,102,103,104,105,106,0
DATA 0,107,108,109,110,0
DATA 0,0,0,0
DATA 0,119,120,121,122,123,124,0
DATA 0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0
DATA 0,0,0,0
DATA 0
DATA 0
'
'        Nachbar unter Stein
'
drunter_daten:
DATA 0
DATA 0
DATA 0,0,0,0
DATA 0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0
DATA 22,23,24,25,26,27
DATA 0,0,0,0,0,0,0,0
DATA 36,37,38,39,40,41
DATA 44,45,46,47
DATA 0,0,0,0,0,0,0,0
DATA 54,55,56,57,58,59
DATA 62,63,64,65
DATA 68,69
DATA 0,0,0,0,0,0,0,0
DATA 74,75,76,77,78,79
DATA 82,83,84,85
DATA 88,89
DATA 0,0,0,0,0,0,0,0
DATA 94,95,96,97,98,99
DATA 102,103,104,105
DATA 0,0,0,0,0,0,0,0
DATA 112,113,114,115,116,117
DATA 0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0
DATA 0,0,0,0
DATA 0
DATA 0
'
'        Nachbar rechts_oben der Steine
'
ro_daten:
DATA 0
DATA 0
DATA 0,0,2,0
DATA 0,0,0,4,5,0
DATA 0,7,0,8,9,10,11,0
DATA 0,13,14,15,16,17,18,19
DATA 0,0,0,0,0,0
DATA 0,21,22,23,24,25,26,27
DATA 0,29,30,31,32,33
DATA 0,0,0,0
DATA 0,35,36,37,38,39,40,41
DATA 0,43,44,45,46,47
DATA 0,49,50,51
DATA 0,0
DATA 0,53,54,55,56,57,58,59
DATA 0,61,62,63,64,65
DATA 0,67,68,69
DATA 0,71
DATA 0,73,74,75,76,77,78,79
DATA 0,81,82,83,84,85
DATA 0,87,88,89
DATA 0,93,94,95,96,97,98,99
DATA 0,101,102,103,104,105
DATA 0,111,112,113,114,115,116,117
DATA 0,126,127,128,129,131
DATA 0,134,135,0
DATA 140
DATA 0
'
'       Nachbar rechts_unten der Steine
'
ru_daten:
DATA 0
DATA 0
DATA 0,2,0,0
DATA 0,4,5,0,0,0
DATA 0,8,9,10,11,0,12,0
DATA 14,15,16,17,18,19,20,0
DATA 0,0,0,0,0,0
DATA 22,23,24,25,26,27,28,0
DATA 30,31,32,33,34,0
DATA 0,0,0,0
DATA 36,37,38,39,40,41,42,0
DATA 44,45,46,47,48,0
DATA 50,51,52,0
DATA 0,0
DATA 54,55,56,57,58,59,60,0
DATA 62,63,64,65,66,0
DATA 68,69,70,0
DATA 72,0
DATA 74,75,76,77,78,79,80,0
DATA 82,83,84,85,86,0
DATA 88,89,90,0
DATA 94,95,96,97,98,99,100,0
DATA 102,103,104,105,106,0
DATA 112,113,114,115,116,117,118,0
DATA 126,128,129,130,131,0
DATA 0,136,137,0
DATA 141
DATA 0
'
'        Nachbar links_oben der Steine
'
lo_daten:
DATA 0
DATA 4
DATA 0,8,9,0
DATA 0,14,15,16,17,19
DATA 0,21,22,23,24,25,26,27
DATA 0,35,36,37,38,39,40,41
DATA 0,43,44,45,46,47
DATA 0,53,54,55,56,57,58,59
DATA 0,61,62,63,64,65
DATA 0,67,68,69
DATA 0,73,74,75,76,77,78,79
DATA 0,81,82,83,84,85
DATA 0,87,88,89
DATA 0,91
DATA 0,93,94,95,96,97,98,99
DATA 0,101,102,103,104,105
DATA 0,107,108,109
DATA 0,0
DATA 0,111,112,113,114,115,116,117
DATA 0,119,120,121,122,123
DATA 0,0,0,0
DATA 0,125,126,127,128,129,130,131
DATA 0,0,0,0,0,0
DATA 0,133,0,134,135,136,137,0
DATA 0,0,0,140,141,0
DATA 0,0,143,0
DATA 0
DATA 0
'
'        Nachbar links_unten der Steine
'
lu_daten:
DATA 0
DATA 5
DATA 0,10,11,0
DATA 14,16,17,18,19,0
DATA 22,23,24,25,26,27,28,0
DATA 36,37,38,39,40,41,42,0
DATA 44,45,46,47,48,0
DATA 54,55,56,57,58,59,60,0
DATA 62,63,64,65,66,0
DATA 68,69,70,0
DATA 74,75,76,77,78,79,80,0
DATA 82,83,84,85,86,0
DATA 88,89,90,0
DATA 92,0
DATA 94,95,96,97,98,99,100,0
DATA 102,103,104,105,106,0
DATA 108,109,110,0
DATA 0,0
DATA 112,113,114,115,116,117,118,0
DATA 120,121,122,123,124,0
DATA 0,0,0,0
DATA 126,127,128,129,130,131,132,0
DATA 0,0,0,0,0,0
DATA 0,134,135,136,137,0,138,0
DATA 0,140,141,0,0,0
DATA 0,143,0,0
DATA 0
DATA 0
'
'        Steine die in der Grundebene liegen
'
eb1_daten:
DATA 139,133,125,111,93,73,53,35,21,13,7,3
DATA 0,0,126,112,94,74,54,36,22,14,0,0
DATA 0,134,127,113,95,75,55,37,23,15,8,0
DATA 140,135,128,114,96,76,56,38,24,16,9,4
DATA 141,136,129,115,97,77,57,39,25,17,10,5
DATA 0,137,130,116,98,78,58,40,26,18,11,0
DATA 0,0,131,117,99,79,59,41,27,19,0,0
DATA 142,138,132,118,100,80,60,42,28,20,12,6
'
'        Steine die in der ersten Ebene liegen
'
eb2_daten:
DATA 119,101,81,61,43,29
DATA 120,102,82,62,44,30
DATA 121,103,83,63,45,31
DATA 122,104,84,64,46,32
DATA 123,105,85,65,47,33
DATA 124,106,86,66,48,34
'
'        Steine die in der 2. Ebene liegen
'
eb3_daten:
DATA 107,87,67,49
DATA 108,88,68,50
DATA 109,89,69,51
DATA 110,90,70,52
'
'       Steine die in der 4. Ebene liegen
'
eb4_daten:
DATA 91,71
DATA 92,72
'
'        Texte fÅr die Dropdown-MenÅs
'
text_daten:
DATA "","  Åber Drachen ","--------------------"
DATA -,-,-,-,-,-
DATA ""
DATA "Spiel","  neues Spiel ","  Spielwiederholung "
DATA "--------------------","  Bestzeiten "
DATA "--------------------","  Farbe 1 ","  Farbe 2 "
DATA "--------------------","  Ende "
DATA ""
DATA "Hilfe","  zeige Zug ","  Zug zurÅcknehmen ","  Stein wegnehmen "
DATA "-------------------","  DEMO langsam ","  DEMO schnell "
DATA ""
DATA "","ENDE"
